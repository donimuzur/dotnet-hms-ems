@using Sampoerna.EMS.Core
@using Sampoerna.EMS.Website.Helpers
@model Sampoerna.EMS.Website.Models.CK4C.Ck4CSummaryReportsViewModel

<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <h3 id="lblTitle">Summary Report</h3>
        </div>
    </div>
</div>



<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            <div class="white-wrapper">

                <div class="form-excise" role="form">
                    <div class="row">
                        @*@using (Ajax.BeginForm("SearchSummaryReports", "CK4C",
                            new AjaxOptions
                            {
                                HttpMethod = "POST",
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = "contenttable",
                                OnComplete = "ReloadDataTables"

                            }))
                        {*@
                        <input type="hidden" name="TotalDataPerPage" id="TotalDataPerPage" value="10" />
                        <input type="hidden" name="CurrentPage" id="CurrentPage" value="1" />
                            <div class="col-md-6">
                                <div class="row">
                                    <label class="col-md-4">CK-4C No</label>
                                    <div class="col-md-8">
                                        @(Model.SearchView.Ck4CNoList == null ? Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                                              : Html.DropDownListFor(model => model.SearchView.Ck4CNo, Model.SearchView.Ck4CNoList, "All", new { @class = "form-control selectreset" }))

                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-md-4">POA</label>
                                    <div class="col-md-8">
                                        @(Model.SearchView.PoaList == null ? Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                              : Html.DropDownListFor(model => model.SearchView.Poa, Model.SearchView.PoaList, "All", new { @class = "form-control selectreset" }))

                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-md-4">Month</label>
                                    <div class="col-md-8">
                                        @(Model.SearchView.MonthList == null ? Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                      : Html.DropDownListFor(model => model.SearchView.Month, Model.SearchView.MonthList, "All", new { @class = "form-control selectreset", id = "SearchInput_Month" }))

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <label class="col-md-4">Plant</label>
                                    <div class="col-md-8">
                                        <select id="SearchInput_POA" name="SearchInput.POA" class="form-control selectreset">
                                            <option value="">All</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-md-4">Creator</label>
                                    <div class="col-md-8">

                                        @(Model.SearchView.CreatorList == null ? Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                              : Html.DropDownListFor(model => model.SearchView.Creator, Model.SearchView.CreatorList, "All", new { @class = "form-control selectreset" }))

                                    </div>
                                </div>
                                <div class="row">
                                    <label class="col-md-4">Year</label>
                                    <div class="col-md-8">
                                        @(Model.SearchView.YearList == null ? Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
      : Html.DropDownListFor(model => model.SearchView.Year, Model.SearchView.YearList, "All", new { @class = "form-control selectreset", id = "SearchInput_Year" }))

                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2 col-md-offset-8">
                                <button id="btn-filter" onclick="OnFilter();" id="btnFILTER" class="btn btn-blue full">FILTER</button>
                            </div>
                            <div class="col-md-2">
                                <input id="btnExport" type="button" class="btn btn-blue full" value="EXPORT" />
                            </div>




                        @*}*@
                    </div>
                </div>
            </div>
            @using (Html.BeginForm("ExportXlsSummaryReports", "CK4C", FormMethod.Post, new { @id = "ExportSummaryReportsForms" }))
            {
                <div class="white-wrapper toggle-wrapper">
                    <div class="form-excise" role="form">
                        <div class="row">

                            <div class="last-form">
                                <div class="col-md-12">

                                    <div>

                                        @Html.HiddenFor(model => model.ExportModel.Ck4CNumber)
                                        @Html.HiddenFor(model => model.ExportModel.Plant)
                                        @Html.HiddenFor(model => model.ExportModel.PoaSearch)
                                        @Html.HiddenFor(model => model.ExportModel.CreatorSearch)
                                        @Html.HiddenFor(model => model.ExportModel.MonthSearch)
                                        @Html.HiddenFor(model => model.ExportModel.YearSearch)

                                        <div class="row toggle">

                                            <div class="toggle-title">
                                                Toggle column <i class="fa fa-chevron-down"></i>
                                            </div>

                                            <div class="toggle-component">
                                                <div class="checkbox">
                                                    <label>
                                                        <input type="checkbox" id="selecctall" /><b>Select All</b>
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Ck4CNo, new {@id ="checkboxDefault1", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "1" })CK-4C No
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Status, new { @id = "checkboxDefault9", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "2" })Status
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.BasedOn, new { @id = "checkboxDefault3", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "3" })CK-4C Type
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.CeOffice, new {@id ="checkboxDefault2", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "4" })Company
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.LicenseNumber, new { @id = "checkboxDefault4", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "5" })NPPBKC
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Kppbc, new { @class = "checkbox checkexport", @datacolumn = "6" })KPPBC
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.PlantId, new { @id = "checkboxDefault5", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "7" })Plant ID
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.PlantDescription, new { @class = "checkbox checkexport", @datacolumn = "8" })Plant Desc
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Period, new { @id = "checkboxDefault6", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "9" })Period
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Month, new { @id = "checkboxDefault7", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "10" })Month
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Year, new { @id = "checkboxDefault8", @checked = "checked", @class = "checkbox checkexport", @datacolumn = "11" })Year
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.ProductionDate, new { @class = "checkbox checkexport", @datacolumn = "12" })Production Date
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.FaCode, new { @class = "checkbox checkexport", @datacolumn = "13" })FA Code
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.TobaccoProductType, new { @class = "checkbox checkexport", @datacolumn = "14" })Tobacco Product Type
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.BrandDescription, new { @class = "checkbox checkexport", @datacolumn = "15" })Brand Description
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Hje, new { @class = "checkbox checkexport", @datacolumn = "16" })HJE
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Tariff, new { @class = "checkbox checkexport", @datacolumn = "17" })Tariff
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Content, new { @class = "checkbox checkexport", @datacolumn = "18" })Content Per Pack
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.PackedQty, new { @class = "checkbox checkexport", @datacolumn = "19" })Packed QTY
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Zb, new { @class = "checkbox checkexport", @datacolumn = "20" })ZB: Only for SKT
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.PackedAdjusted, new { @class = "checkbox checkexport", @datacolumn = "21" })Packed - Adjusted: Only for TIS CF
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.UnPackQty, new { @class = "checkbox checkexport", @datacolumn = "22" })Unpacked QTY
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.ProducedQty, new { @class = "checkbox checkexport", @datacolumn = "23" })Produced QTY
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.UomProducedQty, new { @class = "checkbox checkexport", @datacolumn = "24" })UoM Produced QTY
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Remarks, new { @class = "checkbox checkexport", @datacolumn = "25" })Remarks
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Creator, new { @class = "checkbox checkexport", @datacolumn = "26" })Creator
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.PoaApproved, new { @class = "checkbox checkexport", @datacolumn = "27" })POA Approved by
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.ReportPeriod, new { @class = "checkbox checkexport", @datacolumn = "28" })Reported On
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.CompletedDate, new { @class = "checkbox checkexport", @datacolumn = "29" })Completed Date
                                                    </label>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
    <div id="contenttable" class="table-container">
        @Html.Partial("_Ck4CListSummaryReport")
    </div>
</div>

<div class="loading"></div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" language="javascript" class="init">

        $(document).ready(function() {

            setupDataTables(true);

            $('#SearchInput_Month').addClass('input-validation-error');
            $('#SearchInput_Year').addClass('input-validation-error');

            $('#menuCk4COpenDocuments').removeClass('open');

            $('#menuCk4CReport').addClass('open');
            $('#MenuCk4CSummaryReports').addClass('active');

            $('#selecctall').prop('checked', false);
            $('.checkexport').each(function() {
                this.checked = false;
            });

            $('#checkboxDefault1').prop('checked', true);
            $('#checkboxDefault2').prop('checked', true);
            $('#checkboxDefault3').prop('checked', true);
            $('#checkboxDefault4').prop('checked', true);
            $('#checkboxDefault5').prop('checked', true);
            $('#checkboxDefault6').prop('checked', true);
            $('#checkboxDefault7').prop('checked', true);
            $('#checkboxDefault8').prop('checked', true);
            $('#checkboxDefault9').prop('checked', true);
        });

        function setupDataTables(blFirst) {

            var table = null;
            if ($.fn.dataTable.isDataTable('#ck4CTable')) {
                table = $('#ck4CTable').DataTable();
                table.destroy();
            }

            table = $('#ck4CTable').DataTable(
                {
                    "sDom": "Rlfrtip",
                    "sPaginationType": "full_numbers",
                    "language": {
                        "zeroRecords": "No records found",
                        "infoFiltered": "(filtered from _MAX_ total records)"
                    },

                    "rowCallback": function(row, data, index) {

                        var info = $('#ck4CTable').DataTable().page.info();
                        $(row).find("td").first().html((info.page * info.length) + index + 1);
                    },
                    "serverSide": true,
                    //"processing": true,
                    "paging": true,
                    "deferRender": true,
                    "columns": setupColumns(),
                    "ajax": {
                        "url": "@Url.Action("SearchSummaryReportsAjax", "CK4C")",
                        "type": "POST",

                        "data": function(d) {
                            return $.extend({}, d, {
                                "ExtraFilter": {
                                    "SearchView": {
                                        Ck4CNo: $("#SearchView_Ck4CNo").find("option:selected").val(),

                                        PlantId: $('#SearchView_PlantId').find("option:selected").val(),

                                        Month: $('#SearchInput_Month').find("option:selected").val(),

                                        Year: $('#SearchInput_Year').find("option:selected").val(),

                                        Poa: $('#SearchView_Poa').find("option:selected").val(),
                                        Creator: $('#SearchView_Creator').find("option:selected").val()
                                    }
                                }
                            });
                        }
                    },
                    "columnDefs": [{
                            "targets": 12,
                            "render": function (data, type, full, meta) {
                                debugger;
                                return renderColumnList(data);
                            }                            
                        },
                        {
                            "targets": 13,
                            "render": function(data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 14,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 15,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 16,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 17,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 18,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 19,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 20,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 21,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 22,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 23,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 24,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        },
                        {
                            "targets": 25,
                            "render": function (data, type, full, meta) {
                                return renderColumnList(data);
                            }
                        }
                    ]
                });

            table.on('preXhr', function(e, settings, data) {
                $(".loading").show();
            });

            table.on('xhr', function(e, settings, data) {
                $(".loading").hide();
            });

            if (blFirst) {
                for (var i = 1; i < 30; i++) {
                    table.column(i).visible(false);
                }

                table.column(1).visible(true);
                table.column(2).visible(true);
                table.column(3).visible(true);
                table.column(4).visible(true);
                table.column(5).visible(true);
                table.column(7).visible(true);
                table.column(8).visible(true);
                table.column(9).visible(true);
            } else {
                $('.checkexport').each(function() {

                    // Get the column API object
                    var column = table.column($(this).attr('datacolumn'));

                    // Toggle the visibility
                    column.visible(false);
                    if ($(this).is(':checked')) {
                        // Toggle the visibility
                        column.visible(true);
                    }

                });
            }

            $('.checkexport').on('click', function(e) {
                // e.preventDefault();
                table.column(0).visible(true);

                // Get the column API object
                var column = table.column($(this).attr('datacolumn'));

                // Toggle the visibility
                column.visible(!column.visible());

                $('#ck4CTable').parents('div.dataTables_wrapper').first().hide();

                for (var i = 0; i < 30; i++) {
                    if (table.column(i).visible()) {
                        $('#ck4CTable').parents('div.dataTables_wrapper').first().show();
                        return;
                    }
                }

            });

            $('#selecctall').change(function() {

                if ($(this).is(':checked')) {
                    $('.checkexport').prop('checked', this.checked);
                    // Show a column
                    $('#ck4CTable').parents('div.dataTables_wrapper').first().show();
                    var table = $('#ck4CTable').DataTable();
                    for (var i = 0; i < 30; i++) {
                        table.column(i).visible(true);

                    }
                    table.column(0).visible(true);
                    // Show a column
                    $('#ck4CTable').parents('div.dataTables_wrapper').first().show();

                } else {
                    $('.checkexport').each(function() {
                        this.checked = false;

                    });
                    var table = $('#ck4CTable').DataTable();
                    for (var i = 0; i < 30; i++) {
                        table.column(i).visible(false);

                    }
                    $('#ck4CTable').parents('div.dataTables_wrapper').first().hide();
                }
            });
        }

        function renderColumnList(data) {
            var retData = '<ol>';
            for (var i = 0; i < data.length; i++) {
                retData = retData + '<ul>' + data[i] + '</ul>';
            }
            retData = retData + '</ol>';

            return retData;
        }

        //function setupDataTables(blFirst) {

        //    $('#btn-filter').click(function() {
        //        $('.loading').show();
        //    });

        //    // DataTable
        //    var table = null;
        //    if ($.fn.dataTable.isDataTable('#ck4CTable')) {
        //        table = $('#ck4CTable').DataTable();
        //        table.destroy();
        //    }

        //    table = $('#ck4CTable').DataTable(
        //        {
        //            "order": [[0, 'asc'], [3, 'asc']],
        //            "sDom": "Rlfrtip",
        //            "language": {
        //                "zeroRecords": "No records found",
        //                "infoFiltered": "(filtered from _MAX_ total records)"
        //            }
        //        });


        //    $('.checkexport').on('click', function(e) {
        //        //e.preventDefault();
        //        table.column(0).visible(true);

        //        // Get the column API object
        //        var column = table.column($(this).attr('datacolumn'));

        //        // Toggle the visibility
        //        column.visible(!column.visible());
        //        $('#ck4CTable').parents('div.dataTables_wrapper').first().show();
        //    });

        //    if (blFirst) {
        //        for (var i = 1; i < 30; i++) {
        //            table.column(i).visible(false);
        //        }

        //        table.column(1).visible(true);
        //        table.column(2).visible(true);
        //        table.column(3).visible(true);
        //        table.column(4).visible(true);
        //        table.column(5).visible(true);
        //        table.column(7).visible(true);
        //        table.column(8).visible(true);
        //        table.column(9).visible(true);
        //    } else {
        //        $('.checkexport').each(function() {

        //            // Get the column API object
        //            var column = table.column($(this).attr('datacolumn'));

        //            // Toggle the visibility
        //            column.visible(false);
        //            if ($(this).is(':checked')) {
        //                // Toggle the visibility
        //                column.visible(true);
        //            }

        //        });
        //    }

        //    $('#selecctall').change(function() {
        //        if ($(this).is(':checked')) {
        //            $('.checkexport').prop('checked', this.checked);
        //            // Show a column
        //            $('#ck4CTable').parents('div.dataTables_wrapper').first().show();
        //            var table = $('#ck4CTable').DataTable();
        //            for (var i = 0; i < 30; i++) {
        //                table.column(i).visible(true);

        //            }
        //            table.column(0).visible(true);
        //            // Show a column
        //            $('#ck4CTable').parents('div.dataTables_wrapper').first().show();

        //        } else {
        //            $('.checkexport').each(function() {
        //                this.checked = false;

        //            });
        //            var table = $('#ck4CTable').DataTable();
        //            for (var i = 0; i < 30; i++) {
        //                table.column(i).visible(false);

        //            }
        //            $('#ck4CTable').parents('div.dataTables_wrapper').first().hide();
        //        }
        //    });

        //}

        function ReloadDataTables() {
            setupDataTables(false);
            $('#SearchInput_Month').removeClass('input-validation-error');
            $('#SearchInput_Year').removeClass('input-validation-error');
            //$('.loading').hide();
        }

        function OnReset() {

            $(".selectreset").val($(".selectreset option:first").val());
        }

        function OnFilter() {
            var table = $('#ck4CTable').DataTable();

            table.ajax.reload();
        }

        $("#btnExport").click(function() {
            GetSearchSummaryReports();
            $('#ExportSummaryReportsForms').submit();
        });

        function GetSearchSummaryReports() {
            $('#ExportModel_Ck4CNumber').val($('#SearchView_Ck4CNo').find("option:selected").val());
            $('#ExportModel_Plant').val($('#SearchView_PlantId').find("option:selected").val());
            $('#ExportModel_PoaSearch').val($('#SearchView_Poa').find("option:selected").val());
            $('#ExportModel_CreatorSearch').val($('#SearchView_Creator').find("option:selected").val());
            $('#ExportModel_MonthSearch').val($('#SearchInput_Month').find("option:selected").val());
            $('#ExportModel_YearSearch').val($('#SearchInput_Year').find("option:selected").val());
        }

        function setupColumns() {

            var columns = [
                { "data": null, "orderable": false },
                { "data": "Ck4CNo", "orderable": true },
                { "data": "Status", "orderable": true },
                { "data": "BasedOn", "orderable": true },
                { "data": "CeOffice", "orderable": true },
                { "data": "LicenseNumber", "orderable": true },
                { "data": "Kppbc", "orderable": true },
                { "data": "PlantId", "orderable": true },
                { "data": "PlantDescription", "orderable": true },
                { "data": "Period", "orderable": true },
                { "data": "Month", "orderable": true },
                { "data": "Year", "orderable": true },
                { "data": "ProductionDate", "orderable": false },
                { "data": "FaCode", "orderable": false },
                { "data": "TobaccoProductType", "orderable": false },
                { "data": "BrandDescription", "orderable": false },
                { "data": "Hje", "orderable": false },
                { "data": "Tariff", "orderable": false },
                { "data": "Content", "orderable": false },
                { "data": "PackedQty", "orderable": false },
                { "data": "Zb", "orderable": false },
                { "data": "PackedAdjusted", "orderable": false },
                //{ "data": "PackedQtyInPack", "orderable": false },
                { "data": "UnPackQty", "orderable": false },
                { "data": "ProducedQty", "orderable": false },
                { "data": "UomProducedQty", "orderable": false },
                { "data": "Remarks", "orderable": false },
                { "data": "Creator", "orderable": true },
                { "data": "PoaApproved", "orderable": true },
                { "data": "ReportPeriod", "orderable": true },
                { "data": "CompletedDate", "orderable": true }
            ];

            return columns;


        }

        $("#btnConfirm").click(function() {
            GetSearchSummaryReports();
            $('#ExportSummaryReportsForms').submit();
        });

    </script>
}
