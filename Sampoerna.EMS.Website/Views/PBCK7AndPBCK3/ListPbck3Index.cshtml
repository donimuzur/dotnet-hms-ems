
@using Sampoerna.EMS.Helpers
@model Sampoerna.EMS.Website.Models.PBCK7AndPBCK3.Pbck3IndexViewModel
@{
    ViewBag.Title = "ListPbck3Index";
}

<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <h3>@ViewBag.Title</h3>
        </div>
        <div class="action-button new">
            <a href="@Url.Action("Pbck7Completed", "Pbck7AndPbck3")"><button class="btn btn-blue">NEW</button></a>
        </div>
    </div>
</div>

<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            <div class="white-wrapper">
                @using (Ajax.BeginForm("FilterPbck3Index", "PBCK3_PBCK7",
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "contenttable",
                        OnComplete = "ReloadDataTables",
                    }, new { @class = "form-excise", role = "form" }))
                {
                    <div class="row">
                        <div class="col-md-4">
                            <div class="row">
                                <label class="col-md-4">NPPBKC ID</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.NppbkcId, Model.NppbkcList, "All", new { @class = "form-control selectreset" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="row">
                                <label class="col-md-4">Plant ID</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(x => x.PlantId, Model.PlantList, "All", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="row">
                                <label class="col-md-4 long">Reported On</label>
                                <div class="col-md-8">
                                    <div class="input-group date">
                                        @Html.TextBoxFor(x => x.ReportedOn, new { @class = "form-control" })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="last-form">
                            <div class="col-md-4">
                                <div class="row">
                                    <label class="col-md-4">POA</label>
                                    <div id="divPoaList" class="col-md-8 ui-widget">
                                        @Html.DropDownListFor(x => x.Poa, Model.PoaList, "All", new { @class = "form-control" })


                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row">
                                    <label class="col-md-4">Creator</label>
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Creator, Model.CreatorList, "All", new { @class = "form-control selectreset" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row">
                                    <div class="col-md-6">
                                        <input type="submit" class="btn btn-blue full" value="FILTER" />
                                    </div>
                                    <div class="col-md-6">
                                        <button type="button" id="btn-reset-filter" class="btn btn-blue full">RESET</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>
            <div id="contenttable" class="table-container">
                @Html.Partial("_Pbck3TableIndex")
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">
        var isCompleteView = '@Model.IsCompletedDoc';
        if (isCompleteView = 'False') {
            $('#MenuPBCK3Index').addClass('active');
        } else {
            $('#MenuPBCK3CompleteIndex').addClass('active');
        }
        
        function setupDataTables() {
            $('#btn-reset-filter').click(function () {
                $(".selectreset").val($(".selectreset option:first").val());
            });
            // DataTable
            var table = null;
            if ($.fn.dataTable.isDataTable('#Pbck3')) {
                table = $('#Pbck3').DataTable();
                table.destroy();
            }

            table = $('#Pbck3').DataTable(
                {
                    "sDom": "Rlfrtip",
                    "language": {
                        "zeroRecords": "No records found",
                        "infoFiltered": "(filtered from _MAX_ total records)"
                    }
                });

            // Setup - add a text input to each footer cell
            $('#Pbck3 .filters th').each(function () {
                var idx = $(this).index();
                if (idx != 0) {
                    $(this).html('<input type="text" placeholder="Search" style="width:100%" />');
                }
            });

            // Apply the search
            table.columns().eq(0).each(function (colIdx) {
                $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                    table
                        .column(colIdx)
                        .search(this.value)
                        .draw();
                });
            });


        }

        $("#NppbkcId").change(function() {
            if ($("#NppbkcId").length) {
                var npbkc = $(this).find("option:selected").text();
                $('#SearchInput_POA option').remove();
                $('#SearchInput_PlantId option').remove();
                if (npbkc == '' || $(this).find("option:selected").val() == '') {
                    $('#SearchInput_POA option').append('<option value="">All</option>');
                    $('#SearchInput_PlantId option').append('<option value="">All</option>');
                } else {
                    ajaxSelectNppbck('@Url.Action("PoaAndPlantListPartialPbck3", "PBCK7AndPBCK3")', { nppbkcId: npbkc});
                }
            }
        });

        $(document).ready(function () {
            setupDataTables();
        });

        function ajaxSelectNppbck(url, formData) {
            if (formData.nppbkcId) {
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: formData,
                    success: function (data) {
                        var list = data.PoaList;
                        var listPlant = data.PlantList;
                        $('#SearchInput_POA').append('<option value="">All</option>');
                        $('#SearchInput_PlantId').append('<option value="">All</option>');
                        if (list.length > 0) {
                            for (var i = 0; i < list.length; i++) {
                                $('#SearchInput_POA').append('<option value=' + list[i].Value + '>' + list[i].Text + '</option>');

                            }
                        }

                        if (listPlant.length > 0) {
                            for (var i = 0; i < listPlant.length; i++) {
                                $('#SearchInput_PlantId').append('<option value=' + listPlant[i].Value + '>' + listPlant[i].Text + '</option>');

                            }
                        }

                    }
                });
            }
        }

        function ReloadDataTables() {
            $('.toggle-row').click(function () {

                var filter = $(".filters");
                filter.slideToggle(100).promise().done(function () {

                });
            });
            setupDataTables();
        }
    </script>
}