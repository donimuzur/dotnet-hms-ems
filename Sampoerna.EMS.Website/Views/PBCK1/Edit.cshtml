@using Microsoft.Ajax.Utilities
@using Sampoerna.EMS.Core
@using Sampoerna.EMS.Website.Helpers
@model Sampoerna.EMS.Website.Models.PBCK1.Pbck1ItemViewModel
@{
    ViewBag.Title = "Edit PBCK-1";
}

@using (Html.BeginForm(Model.ActionType, "PBCK1", FormMethod.Post, new { @id = "EditForm", enctype = "multipart/form-data" }))
{
    <div class="container-wrap title-page">
        <div class="row">
            <div class="col-sm-12">
                <h3>PBCK-1 Form</h3>
                <label class="status">@Model.Detail.StatusName</label>
                <div class="action-button">
                    @if (@ViewBag.IsCurrManager != null && @ViewBag.IsCurrManager)
                    {
                        if (Model.AllowApproveAndReject)
                        {
                            <input type="button" class="btn btn-blue" value="Approve" id="btnApprove" />

                            <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                        }
                        else
                        {
                            if (Model.AllowManagerReject)
                            {
                                <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                            }
                        }
                    }
                    else
                    {
                        if (Model.AllowGovApproveAndReject)
                        {
                            <input type="button" class="btn btn-blue" value="Save" id="btnSaveGovStatus" />
                        }
                        else
                        {
                            <input type="submit" class="btn btn-blue" value="Save" />
                        }
                    }


                    <input type="button" class="btn btn-grey" value="Print Preview" id="btnPreview" onclick="printPreview('@Url.EncryptedAction("PrintPreview", "PBCK1", new { id = @Model.Detail.Pbck1Id })')" />
                    
                    @if (Model.DocStatus.HasValue && Model.DocStatus.Value == Enums.DocumentStatus.Completed)
                    {
                        <input type="button" value="Back" class="btn btn-grey" id="btn-back-completed-doc" />
                    }
                    else
                    {
                        <input type="button" value="Back" class="btn btn-grey" id="btnCancel" />
                    }

                    @if (Model.DocStatus.HasValue && (Model.DocStatus.Value == Enums.DocumentStatus.Draft || Model.DocStatus.Value == Enums.DocumentStatus.Rejected || Model.DocStatus.Value == Enums.DocumentStatus.GovRejected))
                    {
                        <input type="button" id="btnSubmitDocument" class="btn btn-blue" value="Submit" />
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="container-wrap">
        <div class="row">
            <div class="col-sm-12">
                <div role="tabpanel">
                    <!-- Nav tabs -->
                    @Html.AntiForgeryToken()
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" id="home-tab" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Information</a></li>
                        <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Print Out</a></li>
                        <li role="presentation" id="prod-plan-upload-tab"><a href="#messages" aria-controls="messages" role="tab" data-toggle="tab">Upload Production Plan</a></li>
                        <li role="presentation" id="prod-conv-upload-tab"><a href="#upload" aria-controls="upload" role="tab" data-toggle="tab">Upload Production Converted</a></li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        @Html.HiddenFor(model => model.Detail.Pbck1Id)
                        @Html.HiddenFor(model => model.Detail.Status)
                        @Html.HiddenFor(model => model.Detail.CreatedById)

                        @if ((Model.Detail.Status == Enums.DocumentStatus.WaitingGovApproval || Model.Detail.Status == Enums.DocumentStatus.Completed) && Model.AllowGovApproveAndReject)
                        {
                            @Html.HiddenFor(model => model.Detail.Pbck1Reference)
                            @Html.HiddenFor(model => model.Detail.Pbck1Type)
                            @Html.HiddenFor(model => model.Detail.PeriodFrom)
                            @Html.HiddenFor(model => model.Detail.PeriodTo)
                            @Html.HiddenFor(model => model.Detail.NppbkcId)
                            @Html.HiddenFor(model => model.Detail.GoodType)
                            @Html.HiddenFor(model => model.Detail.PlanProdFrom)
                            @Html.HiddenFor(model => model.Detail.PlanProdTo)
                            @Html.HiddenFor(model => model.Detail.RequestQty)
                            @Html.HiddenFor(model => model.Detail.RequestQtyUomId)
                            @Html.HiddenFor(model => model.Detail.Lack1FromMonthId)
                            @Html.HiddenFor(model => model.Detail.Lack1FormYear)
                            @Html.HiddenFor(model => model.Detail.Lack1ToMonthId)
                            @Html.HiddenFor(model => model.Detail.Lack1ToYear)
                            @Html.HiddenFor(model => model.Detail.GovApprovalActionType)
                            @*@Html.HiddenFor(model => model.Detail.SupplierPlant)*@
                            @Html.Partial("_HomeGovApproval")
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.Detail.CreatedDate)
                            @Html.Partial("_HomeEdit")
                        }

                        @Html.Partial("_PrintOut")
                        @Html.Partial("_ProdPlanUpload")
                        @Html.Partial("_ProdConvUpload")
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

<div id="Pbck1ModalApprove" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h3><span id="lblTitleModal">Approval</span> </h3>
            </div>
            <div class="modal-body">
                <span id="lblMessageModal">Approve Documents ?</span>
            </div>
            <div class="modal-footer">
                <input type="button" id="btnConfirm" class="btn btn-blue" value="Yes" />
                <input type="button" id="btnNo" class="btn btn-grey" data-dismiss="modal" value="No" />
            </div>
        </div>
    </div>
</div>

<div id="Pbck1Modal" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h3>Submit</h3>
            </div>
            <div class="modal-body">
                Submit Documents  ?
            </div>
            <div class="modal-footer">
                <input type="button" id="btnSubmitConfirm" class="btn btn-blue" value="Yes" />
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
            </div>
        </div>
    </div>
</div>

<div id="ModalPbck1ValidateGov" class="modal ems-modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"> Error</h4>
            </div>
            <div class="modal-body">
                <p>
                    <span id="modalBodyMessage">Missing attach files</span>
                </p>

            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Ok" />
            </div>
        </div>
    </div>
</div>

<div id="Pbck1ModalReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Reject document</h4>
            </div>
            @using (Html.BeginForm("RejectDocument", "PBCK1"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Detail.Pbck1Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Detail.Comment, new { @rows = "5", @class = "col-md-9" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" id="btnClose" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmReject" />
                </div>
            }
        </div>
    </div>
</div>

<div id="Pbck1ModalGovReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Government Reject document</h4>
            </div>
            @using (Html.BeginForm("GovRejectDocument", "PBCK1"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Detail.Pbck1Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Detail.Comment, new { @rows = "5", @class = "col-md-9 GovReject" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmGovReject" />
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var referenceURL = "@Url.Action("GetPBCK1Reference", "PBCK1")";
        var isCurrentManager = @Json.Encode(@ViewBag.IsCurrManager);
        var completedDocument = false;
    </script>
    @if ((Model.Detail.Status == Enums.DocumentStatus.Completed) && Model.AllowGovApproveAndReject)
    {
        <script type="text/javascript">
            completedDocument = true;
        </script>
    }
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.form.min.js"></script>
    <script src="~/Scripts/UploadExcel.js"></script>
    <script src="~/Scripts/pbck1script.js"></script>
    <script src="~/Scripts/thousand-separator.js"></script>
    @if ((Model.Detail.Status == Enums.DocumentStatus.WaitingGovApproval || Model.Detail.Status == Enums.DocumentStatus.Completed) && Model.AllowGovApproveAndReject)
    {
        <script src="~/Scripts/pbck1/docupload.js"></script>
    }
    <script type="text/javascript">
        function setCurrManager() {
            if (isCurrentManager) {
                $('.form-control').attr("disabled", true);
                $("input[type='checkbox']").attr("disabled", "disabled");
                $('.btn').hide();
                $('#btnApprove').show();
                $('#btnReject').show();
                $('#btnCancel').show();
                $('#btnPreview').show();
            }
        }

        $(document).ready(function() {
            setCurrManager();
            openGovStatusBlock();

            $('#divComment').hide();

            $("#btnSubmitConfirm").click(function() {
                $('#Detail_IsSaveSubmit').val('submit');
                $('#EditForm').submit();
            });

            $('#Detail_StatusGov').on('change', function(e) {
                var valueSelected = this.value;
                var request = $("input[name='Detail.RequestQty']:hidden").val();
                $('#divComment').hide();
                $("input[name='Detail.QtyApproved']:text").prop("readonly", true);

                if (valueSelected == 'Rejected') {
                    $('#divComment').show();
                    $("input[name='Detail.QtyApproved']:hidden").val(0);
                    $("input[name='Detail.QtyApproved']:text").val(0);
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovReject');
                } else if (valueSelected == 'PartialApproved') {
                    $("input[name='Detail.QtyApproved']:text").prop("readonly", false);
                    $("input[name='Detail.QtyApproved']:hidden").val(request);
                    $("input[name='Detail.QtyApproved']:text").val(ThausandSeperator(request, 2));
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovPartialApprove');
                } else if (valueSelected == 'FullApproved') {
                    $("input[name='Detail.QtyApproved']:hidden").val(request);
                    $("input[name='Detail.QtyApproved']:text").val(ThausandSeperator(request, 2));
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovApprove');
                }
            });

            $("#btnApprove").click(function() {

                $('#btnConfirm').show();
                $('#btnNo').show();
                $('#btnConfirmGovApprove').hide();
                $('#btnConfirmGovPartApprove').hide();
                $("#lblTitleModal").text('Approval');
                $("#lblMessageModal").text('Approve Documents ?');
                $('#Pbck1ModalApprove').modal('show');

            });

            $("#btnConfirm").click(function() {
                window.location = "@Url.Action("ApproveDocument", "Pbck1", new {id = @Model.Detail.Pbck1Id})";
            });

            $("#btnReject").click(function() {
                $('#btnConfirmReject').attr('disabled', 'disabled');
                $('#Detail_Comment').val('');
                $('#btnClose').show();
                $('#btnConfirmReject').show();
                $('#Pbck1ModalReject').modal('show');

            });

            $('#Detail_Comment').bind('input propertychange', function() {

                $('#btnConfirmReject').attr('disabled', 'disabled');

                if (this.value.length) {
                    $('#btnConfirmReject').removeAttr('disabled');
                }
            });

            $("#btnSaveGovStatus").click(function() {
                if (ValidateGovInput()) {
                    $('#EditForm').submit();
                }
            });

            $('#btnCancel').click(function(e) {
                location.href = '@Url.Action("Index", "Pbck1")';
            });

            $('#btn-back-completed-doc').click(function (e) {
                location.href = '@Url.Action("CompletedDocument", "Pbck1")';
            });

            $("#Detail_SupplierPortId").change(function() {
                var port_name = $('#Detail_SupplierPortId').find("option:selected").text();
                $('#Detail_SupplierPortName').val(port_name);
            });

            $('#btn-changelog-export-xls').click(function() {
                href.location = '@Url.Action("ExportClientsListToExcel", "PBCK1", new {id = Model.Detail.Pbck1Id})';
            });

            $('#prod-conv-save').click(function() {
                prodConvSaveClick();
            });
            $('#prod-plan-save').click(function() {
                prodPlanSaveClick();
            });

            $('#ProdConvSubmitBtn').click(function() {
                prodConvGenerateClick('@Url.Action("UploadFileConversion", "PBCK1")');
            });

            $('#ProdPlanSubmitBtn').click(function() {
                prodPlanGenerateClick('@Url.Action("UploadFilePlan", "PBCK1")');
            });

            $('#btn-prod-conv-upload').click(function() {
                btnProdConvUploadClick();
            });

            $('#btn-prod-plan-upload').click(function() {
                btnProdPlanUploadClick();
            });

            if ($('#btn-back-completed-doc').length) {
                $('#MenuPBCK1CompletedListDocument').addClass('active');
            }
            else {
                $('#MenuPBCK1OpenListDocument').addClass('active');
            }

            $("#Detail_Pbck1Type").change(function() {
                pbck1TypeOnchange();
            });

            var isNppbkcImport = false;
            if ($("#Detail_IsNppbkcImport").is(':checked')) {
                isNppbkcImport = true;
                $('#Detail_IsExternalSupplier').prop('disabled', true);
            }

            ajaxFirstLoadSupplierPlant({ isNppbkcImport: isNppbkcImport }, '@Url.Action("GetSupplierPlant", "PBCK1")');

            pbck1TypeOnchange();

            $('#Detail_GoodType').change(function() {
                setUpload();
                goodTypeOnChange();
            });

            $('#Detail_NppbkcId').change(function() {
                nppbkcIdOnChange();
                ChangeLatestSaldo();
                prodConvClear();
            });

            $("#btnSubmitDocument").click(function() {
                $('#Pbck1Modal').modal('show');
            });

            $("#Detail_IsExternalSupplier").click(function() {
                supplierPortOnChange();
                var isNppbkcImport = false;
                if ($("#Detail_IsNppbkcImport").is(':checked')) {
                    isNppbkcImport = true;
                }
                supplierChange(isNppbkcImport, '@Url.Action("GetSupplierPlantDetail", "PBCK1")');
            });

            $("#Detail_IsNppbkcImport").click(function() {
                isNppbkcImportChecked();
            });

            $("#Detail_PeriodFrom").change(function() {
                setLackYear();
                getReference();
            });


            $("#Detail_PeriodTo").change(function() {
                getReference();
            });

            $("#Detail_SupplierPlant").keyup(function() {
                getReference();
            });

            ResetPrintHistoryDataTable();

            changeToDecimal("input[name='Detail.LatestSaldo']:text", "val");
            changeToDecimal("input[name='Detail.RequestQty']:text", "val");
            changeToDecimal("input[name='Detail.QtyApproved']", "val");
            changeToDecimal("#ProdPlanContent .decimal", "html");
            changeToDecimal("#ProdConvContent .decimal", "html");
            changeToDecimal("#Detail_Pbck1ProdConverter .decimal", "html");
            changeToDecimal("#Detail_Pbck1ProdPlan .decimal", "html");


            if ($("input[name='Detail.QtyApproved']:hidden").length) {
                $("input[name='Detail.QtyApproved']:text").keyup(function() {
                    $(this).val(ThausandSeperator($(this).val(), 2));
                    $("input[name='Detail.QtyApproved']:hidden").val(changeToNumber($(this).val()));
                });
            }

            $("#Detail_PeriodTo").rules('add', { greaterThan: "#Detail_PeriodFrom" });
        });

        function openGovStatusBlock() {
            var docStatus = '@Model.Detail.Status.ToString()';
            var isAllow = '@Model.AllowGovApproveAndReject';
            if (docStatus == '@Enums.DocumentStatus.WaitingGovApproval.ToString()' && isAllow.toLowerCase() == 'true') {
                $('#home').addClass('active');
                $('#home-tab').addClass('active');
                $('#collapseOne').removeClass('in');
                $('#collapseOne').addClass('collapse');
                $('#collapseFour').addClass("in");

                setSupplierName();
            }
        }

        function printPreview(url) {

            window.open(url, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');

        }
        
        function openAttachment(url) {
            window.open(url, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes');
        }
        
        function PrintOutClick(reportUrl, addHistoryUrl, id) {

            window.open(reportUrl, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');

            $.ajax({
                type: 'POST',
                url: addHistoryUrl,
                data: { id: id },
                success: function(response) {
                    $('#PrintOutHistoryTable').html("");
                    $('#PrintOutHistoryTable').html(response);
                    ResetPrintHistoryDataTable();
                }
            });
        }


        function ResetPrintHistoryDataTable() {
            // DataTable
            var table = null;
            if ($.fn.dataTable.isDataTable('#printHistoryTable')) {
                table = $('#printHistoryTable').DataTable();
                table.destroy();
            }

            table = $('#printHistoryTable').DataTable(
                {
                    "sDom": "Rlfrtip",
                    "language": {
                        "zeroRecords": "No records found",
                        "infoFiltered": "(filtered from _MAX_ total records)"
                    }
                });

            // Setup - add a text input to each footer cell
            //$('#printHistoryTable .filters th').each(function () {
            //    var idx = $(this).index();
            //    if (idx != 0) {
            //        $(this).html('<input type="text" placeholder="Search" style="width:100%" />');
            //    }
            //});

            //// Apply the search
            //table.columns().eq(0).each(function (colIdx) {
            //    $('input', $('.filters th')[colIdx]).on('keyup change', function () {
            //        table
            //            .column(colIdx)
            //            .search(this.value)
            //            .draw();
            //    });
            //});
        }

        function loadSupplierPlant() {
            var list = supplierData;
            if (list.length > 0) {
                var isNppbkcImport = false;
                if ($("#Detail_IsNppbkcImport").is(':checked')) {
                    isNppbkcImport = true;
                }
                var htmlSelect = '';
                htmlSelect += '<select class="form-control" id="Detail_SupplierPlant_ddl" name="Detail.SupplierPlant_ddl" onchange="ChangeLatestSaldo();supplierChange(' + isNppbkcImport + ',\'@Url.Action("GetSupplierPlantDetail", "PBCK1")\');">';
                for (var i = 0; i < list.length; i++) {
                    htmlSelect += '<option value=' + list[i].Value + '>' + list[i].Text + '</option>';
                }
                htmlSelect += '</select>';
                htmlSelect += '<input id="Detail_SupplierPlant" name="Detail.SupplierPlant" value="" type="hidden">';
                $('#supp-plant').html(htmlSelect);

                if ("@Model.Detail.SupplierPlantWerks" != "")
                    $("#Detail_SupplierPlant_ddl").val("@Model.Detail.SupplierPlantWerks");
                if (isCurrentManager) {
                    $("#Detail_SupplierPlant_ddl").attr("disabled", "disabled");
                }
            }
        }

        function ajaxSelectNppbck(formData) {
            if (formData.nppbkcid) {
                //Load POA
                ajaxLoadPoa(formData, '@Url.Action("PoaListPartial", "pbck1")');

                //Load company
                ajaxLoadCompany(formData, '@Url.Action("GetNppbkcDetail", "PBCK1")');
            }
        }

        function nppbkcIdOnChange() {
            $('#Detail_NppbkcCompanyName').val('');
            $('#Detail_NppbkcCompanyCode').val('');
            $('#Detail_NppbkcKppbcId').val('');
            $('#displayCompanyName').val('');
            $('#Detail_PoaList').val('');
            $('#displayPoaList').val('');

            if ($("#Detail_NppbkcId").length) {
                var nppbkcid = $('#Detail_NppbkcId').find("option:selected").val();
                console.log(nppbkcid);
                if (nppbkcid != '') {
                    ajaxSelectNppbck({ nppbkcid: nppbkcid });
                }
            }
            getReference();
        }

        function ajaxLoadSupplierPlant(formData, url) {
            $.ajax({
                type: 'POST',
                url: url,
                data: formData,
                success: function(data) {
                    supplierData = data;
                    //load supplier plant
                    supplierPortOnChange();
                    supplierChange(formData.isNppbkcImport, '@Url.Action("GetSupplierPlantDetail", "PBCK1")');
                }
            });
        }

        function ajaxFirstLoadSupplierPlant(formData, url) {
            $.ajax({
                type: 'POST',
                url: url,
                data: formData,
                success: function(data) {
                    supplierData = data;
                    //load supplier plant
                    supplierPortOnChange();
                    setSupplierInfo();
                }
            });
        }

        function supplierPortOnChange() {
            if ($("#Detail_SupplierPortId").length) {
                var port_id = $('#Detail_SupplierPortId').find("option:selected").val();
                console.log(port_id);
                $('#Detail_SupplierPlant').remove();
                if ($("#Detail_IsExternalSupplier").is(':checked')) {
                    $('#supp-plant').html('<input class="form-control" id="Detail_SupplierPlant" name="Detail.SupplierPlant" type="text" maxlength="4"/>');
                    disableSupplierFormInput(false);
                    setSupplierPlantEmpty();
                } else {
                    loadSupplierPlant();
                    disableSupplierFormInput(true);
                }
                if (isCurrentManager)
                    $("#Detail_SupplierPlant").attr("disabled", "disabled");
            }
        }

        $('#Detail_Lack1FromMonthId').change(function() {
            ChangeLatestSaldo();
        });

        $('#Detail_Lack1ToMonthId').change(function() {
            ChangeLatestSaldo();
        });

        $('#Detail_Lack1FormYear').change(function() {
            ChangeLatestSaldo();
        });

        $('#Detail_Lack1ToYear').change(function() {
            ChangeLatestSaldo();
        });

        $('#Detail_GoodType').change(function() {
            ChangeLatestSaldo();
        });

        function ChangeLatestSaldo() {
            var month = 0;
            var year = 0;
            var plant = "";
            var goodtype = "";

            var nppbkcid = "";
            if ($("#Detail_NppbkcId").length) {
                nppbkcid = $('#Detail_NppbkcId').val();
            }
            if ($("#Detail_Lack1ToMonthId").length) {
                month = $('#Detail_Lack1ToMonthId').val();
            }
            if ($('#Detail_Lack1ToYear').length) {
                year = $('#Detail_Lack1ToYear').val();
            }
            if ($('#Detail_SupplierPlant_ddl').length) {
                plant = $('#Detail_SupplierPlant_ddl').val();
            }
            if ($('#Detail_GoodType').length) {
                goodtype = $('#Detail_GoodType').val();
            }

            if (month != 0 && year != 0 && plant != "" && goodtype != "") {
                setLatestSaldo({ month: month, year: year, nppbkcid: nppbkcid, plant: plant, goodtype: goodtype }, '@Url.Action("GetLatestSaldoLack", "PBCK1")');
            } else {
                $('#Detail_LatestSaldoUomName').val('0');
            }
        }


        function setLatestSaldo(formData, url) {
            $.ajax({
                type: 'POST',
                url: url,
                data: formData,
                success: function(data) {
                    if (data != null) {
                        var saldo = parseFloat(Math.round(data.latestSaldo * 100) / 100).toFixed(2);
                        $("input[name='Detail.LatestSaldo']:hidden").val(data.latestSaldo);
                        $("input[name='Detail.LatestSaldo']:text").val(ThausandSeperator(saldo, 2));
                    } else {
                        $("input[name='Detail.LatestSaldo']:hidden").val('0');
                        $("input[name='Detail.LatestSaldo']:text").val('0' + ".00");
                    }
                }
            });
        }

        function setSupplierInfo() {
            $('#Detail_SupplierPlantWerks').val($('#SupInfo_SupplierPlantWerks').val());
            $('#Detail_SupplierPlant_ddl').val($('#SupInfo_SupplierPlantWerks').val());
            $('#Detail_SupplierNppbkcId').val($('#SupInfo_SupplierNppkbc').val());
            $('#Detail_SupplierAddress').val($('#SupInfo_SupplierAddress').val());
            $('#Detail_SupplierKppbcName').val($('#SupInfo_SupplierKppkbc').val());
            $('#Detail_HiddenSupplierNppbkcId').val($('#SupInfo_SupplierNppkbc').val());
            $('#Detail_HiddendSupplierAddress').val($('#SupInfo_SupplierAddress').val());
            $('#Detail_HiddenSupplierKppbcId').val($('#SupInfo_SupplierKppkbc').val());
            $('#Detail_SupplierPlant').val($('#SupInfo_SupplierPlantName').val());
            //$('#Detail_SupplierPhone').val($('#SupInfo_SupplierPhone').val());

            var nppbkcid = $('#Detail_NppbkcId').find("option:selected").val();

            if ($('#Detail_NppbkcId').is('input, select')) {
                console.log('1111');
                nppbkcid = $('#Detail_NppbkcId').val();
                console.log(nppbkcid);
            }

            if ($('#SupInfo_SupplierPlantWerks').val() == '') {
                disableSupplierFormInput(false);
                $("#Detail_IsExternalSupplier").prop('checked', true);
                $("#Detail_SupplierPlant_ddl").hide();
                $("#Detail_SupplierPlant").prop("type", "text");
                $("#Detail_SupplierPlant").addClass('form-control');
            }

            ajaxSelectNppbck({ nppbkcid: nppbkcid });
        }

        function setSupplierName() {
            var suppId = $("#Detail_SupplierPlantWerks").val();
            var suppName = $("input[name='Detail.SupplierPlant']:hidden").val();
            var correctSupName = suppId + '-' + suppName;
            var isExternal = true;

            if (suppId != '') {
                $("input[name='Detail.SupplierPlant']:text").val(correctSupName);
                isExternal = false;
            }

            $("#Detail_IsExternalSupplier").prop('checked', isExternal);
        }

        function isNppbkcImportChecked() {
            var isDisabled = false;
            var isChecked;
            var isNppbkcImport = false;

            if ($("#Detail_IsNppbkcImport").is(':checked')) {
                isDisabled = true;
                isChecked = false;
                isNppbkcImport = true;
            }

            $("#Detail_IsExternalSupplier").prop('checked', isChecked);
            $('#Detail_IsExternalSupplier').prop('disabled', isDisabled);

            ajaxLoadSupplierPlant({ isNppbkcImport: isNppbkcImport }, '@Url.Action("GetSupplierPlant", "PBCK1")');
        }

    </script>
    @if ((Model.Detail.Status == Enums.DocumentStatus.WaitingGovApproval || Model.Detail.Status == Enums.DocumentStatus.Completed) && Model.AllowGovApproveAndReject)
    {
        <script type="text/javascript">
            $(document).ready(function() {
                var valueSelected = $('#Detail_StatusGov').val();
                var request = $("input[name='Detail.RequestQty']:hidden").val();
                $('#divComment').hide();
                $("input[name='Detail.QtyApproved']:text").prop("readonly", true);

                if (valueSelected == 'Rejected') {
                    $('#divComment').show();
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovReject');
                } else if (valueSelected == 'PartialApproved') {
                    $("input[name='Detail.QtyApproved']:text").prop("readonly", false);
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovPartialApprove');
                } else if (valueSelected == 'FullApproved') {
                    $('#Detail_GovApprovalActionType').val('@Enums.ActionType.GovApprove');
                }

                var qtyText = $("input[name='Detail.QtyApproved']:text").val();
                var qtyApproved = $("input[name='Detail.QtyApproved']:hidden").val();
                var decQty = ThausandSeperator(qtyApproved, 2);
                var correctQty = changeToNumber(decQty);
                
                $("input[name='Detail.QtyApproved']:hidden").val(correctQty);
                $("input[name='Detail.QtyApproved']:text").val(qtyText);
            });
        </script>
    }
}