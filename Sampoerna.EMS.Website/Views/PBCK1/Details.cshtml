@using Sampoerna.EMS.Core
@model Sampoerna.EMS.Website.Models.PBCK1.Pbck1ItemViewModel
@{
    ViewBag.Title = "Create";
}
<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <h3>PBCK-1 Form</h3>
            <label class="status">@Model.Detail.StatusName</label>
            <div class="action-button">

                @if (Model.AllowApproveAndReject)
                {
                    <input type="button" class="btn btn-blue" value="Approve" id="btnApprove" />

                    <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                }
                else
                {
                    if (Model.AllowGovApproveAndReject)
                    {
                        <input type="button" class="btn btn-blue" value="GovApprove" id="btnGovApprove" />

                        <input type="button" class="btn btn-danger" value="GovReject" id="btnGovReject" />

                        <input type="button" class="btn btn-danger" value="GovPartialApprove" id="btnGovPartApprove" />
                    }
                }

                <input type="button" class="btn btn-grey" value="Print Preview" />

                @if (Model.DocStatus.HasValue && Model.DocStatus.Value == Enums.DocumentStatus.Completed)
                {
                    <input type="button" value="Back" class="btn btn-grey" id="btn-back-completed-doc" />
                }
                else
                {
                    <input type="button" value="Back" class="btn btn-grey" id="btn-back-open-doc" />
                }

            </div>
        </div>
    </div>
</div>
<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            <div role="tabpanel">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" id="home-tab" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Information</a></li>
                    <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Print Out</a></li>
                    <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Changes Log</a></li>
                </ul>
                <!-- Tab panes -->
                <div class="tab-content">
                    @if (Model.Detail.Status == Enums.DocumentStatus.WaitingGovApproval && Model.AllowGovApproveAndReject)
                    {
                        @Html.Partial("_HomeGovApproval")
                    }
                    else
                    {
                        @Html.Partial("_HomeDetails")
                    }

                    @Html.Partial("_PrintOut")
                    @Html.Partial("_ChangeLog")
                </div>
            </div>
        </div>
    </div>
</div>


<div id="Pbck1Modal" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h3><span id="lblTitleModal">Approval</span> </h3>
            </div>
            <div class="modal-body">
                <span id="lblMessageModal">Approve Documents ?</span>
            </div>
            <div class="modal-footer">
                <input type="button" id="btnConfirm" class="btn btn-blue" value="Yes" />
                <input type="button" id="btnConfirmGovApprove" class="btn btn-blue" value="Yes" />
                <input type="button" id="btnConfirmGovPartApprove" class="btn btn-blue" value="Yes" />
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
            </div>
        </div>
    </div>
</div>


<div id="Pbck1ModalReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Reject document</h4>
            </div>
            @using (Html.BeginForm("RejectDocument", "PBCK1"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Detail.Pbck1Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Detail.Comment, new { @rows = "5", @class = "col-md-9" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmReject" />
                </div>
            }
        </div>
    </div>
</div>

<div id="Pbck1ModalGovReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Government Reject document</h4>
            </div>
            @using (Html.BeginForm("GovRejectDocument", "PBCK1"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Detail.Pbck1Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Detail.Comment, new { @rows = "5", @class = "col-md-9 GovReject" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmGovReject" />
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.form.min.js"></script>
    <script src="~/Scripts/UploadExcel.js"></script>

    @if (Model.Detail.Status == Enums.DocumentStatus.WaitingGovApproval && Model.AllowGovApproveAndReject)
    { 
        <script src="~/Scripts/pbck1/docupload.js"></script>
    }

    <script type="text/javascript">

        $(document).ready(function () {
            $('#MenuPBCK1OpenListDocument').addClass('active');
            $('#btn-back-open-doc').click(function (e) {
                location.href = '@Url.Action("Index", "Pbck1")';
            });
            $('#btn-back-completed-doc').click(function (e) {
                location.href = '@Url.Action("CompletedDocument", "Pbck1")';
            });
            $('#btn-changelog-export-xls').click(function () {
                location.href = '@Url.Action("ExportClientsListToExcel", "PBCK1", new { id = Model.Detail.Pbck1Id })';
            });

            $('#MenuPBCK1OpenListDocument').addClass('active');

            $('#btn-changelog-export-xls').click(function () {
                alert('export on progress');
            });

            var nppbkcid = $('#Detail_NppbkcId').val();
            ajaxLoadPoa({ nppbkcId: nppbkcid });

            $("#btnApprove").click(function () {

                $('#btnConfirm').show();
                $('#btnConfirmGovApprove').hide();
                $('#btnConfirmGovPartApprove').hide();
                $("#lblTitleModal").text('Approval');
                $("#lblMessageModal").text('Approve Documents ?');
                $('#Pbck1Modal').modal('show');

            });

            $("#btnConfirm").click(function () {
                window.location = "@Url.Action("ApproveDocument", "Pbck1", new { id = @Model.Detail.Pbck1Id })";
            });


            $("#btnReject").click(function () {
                $('#btnConfirmReject').attr('disabled', 'disabled');

                $('#Detail_Comment').val('');

                $('#Pbck1ModalReject').modal('show');

            });

            $('#Detail_Comment').bind('input propertychange', function () {

                $('#btnConfirmReject').attr('disabled', 'disabled');
                $('#btnConfirmGovReject').attr('disabled', 'disabled');
                $('#btnConfirmGovPartApprove').attr('disabled', 'disabled');

                if (this.value.length) {
                    $('#btnConfirmReject').removeAttr('disabled');
                    $('#btnConfirmGovReject').removeAttr('disabled');
                    $('#btnConfirmGovPartApprove').removeAttr('disabled');
                }
            });

            $('.GovPartApprove').bind('input propertychange', function () {
                $('#btnConfirmGovPartApprove').attr('disabled', 'disabled');
                if (this.value.length) {
                    $('#btnConfirmGovPartApprove').removeAttr('disabled');
                }
            });

            $('.GovReject').bind('input propertychange', function () {
                $('#btnConfirmGovReject').attr('disabled', 'disabled');
                if (this.value.length) {
                    $('#btnConfirmGovReject').removeAttr('disabled');
                }
            });

            $("#btnGovApprove").click(function () {
                $('#btnConfirm').hide();
                $('#btnConfirmGovPartApprove').hide();
                $('#btnConfirmGovApprove').show();
                $("#lblTitleModal").text('GovApproval');
                $("#lblMessageModal").text('GovApprove Documents ?');
                $('#Pbck1Modal').modal('show');

            });

            $("#btnConfirmGovApprove").click(function () {
                window.location = "@Url.Action("GovApproveDocument", "Pbck1", new { id = @Model.Detail.Pbck1Id })";
            });

            $("#btnGovReject").click(function () {
                $('#btnConfirmGovReject').attr('disabled', 'disabled');
                $('.GovReject').val('');
                $('#Pbck1ModalGovReject').modal('show');

            });

            $("#btnGovPartApprove").click(function () {
                $('#btnConfirmGovPartApprove').attr('disabled', 'disabled');
                $('.GovPartApprove').val('');
                $('#Pbck1ModalGovPartApprove').modal('show');

            });

            openGovStatusBlock();

        });
        
        function openGovStatusBlock() {
            var docStatus = '@Model.Detail.Status.ToString()';
            var isAllow = '@Model.AllowGovApproveAndReject';
            if (docStatus == '@Enums.DocumentStatus.WaitingGovApproval.ToString()' && isAllow.toLowerCase() == 'true') {
                $('#home-tab').addClass('active');
                $('#home').addClass('active');
                $('#collapseFour').addClass("in");
            }
        }

        function ajaxLoadPoa(formData) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("PoaListPartial", "pbck1")',
                data: formData,
                success: function (data) {
                    var list = data.SearchInput.PoaList;
                    if (list.length > 0) {
                        var poalist = '';
                        for (var i = 0; i < list.length; i++) {
                            poalist = poalist + ', ' + list[i].Text;
                        }
                        poalist = poalist.slice(2);
                        $('#displayPoaList').val(poalist);
                    }
                }
            });
        }

    </script>
}