@model Sampoerna.EMS.Website.Models.PBCK1.Pbck1MonitoringUsageViewModel

<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <!-- Fixing Bug PBCK1 No. 162 -->
            <h3 id="lblTitle">Monitoring Usage</h3>
        </div>
    </div>
</div>

<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            <div class="white-wrapper">
                <div class="form-excise" role="form">
                    <div class="row">
                        @using (Ajax.BeginForm("SearchMonitoringUsage", "Pbck1",
                new AjaxOptions
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "contenttable",
                    OnComplete = "ReloadDataTables"

                }))
                        {
                            <div class="col-md-4">
                                <div class="row">
                                    <label class="col-md-5">Company Code</label>
                                    <div class="col-md-7">
                                        @* ReSharper disable once ConvertIfStatementToConditionalTernaryExpression *@
                                        @if (Model.SearchView.CompanyCodeList == null)
                                        {
                                            @Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SearchView.CompanyCode, Model.SearchView.CompanyCodeList, "All", new { @class = "form-control selectreset" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row">
                                    <label class="col-md-4">From - To</label>
                                    <div class="col-md-8 year-from">
                                        @* ReSharper disable once ConvertIfStatementToConditionalTernaryExpression *@
                                        @if (Model.SearchView.YearFromList == null)
                                        {
                                            @Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SearchView.YearFrom, Model.SearchView.YearFromList, "All", new { @class = "form-control selectreset" })
                                        }

                                        @* ReSharper disable once ConvertIfStatementToConditionalTernaryExpression *@
                                        @if (Model.SearchView.YearToList == null)
                                        {
                                            @Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SearchView.YearTo, Model.SearchView.YearToList, "All", new { @class = "form-control selectreset" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row">
                                    <label class="col-md-4">NPPBKC</label>
                                    <div class="col-md-8">
                                        @* ReSharper disable once ConvertIfStatementToConditionalTernaryExpression *@
                                        @if (Model.SearchView.NppbkcIdList == null)
                                        {
                                            @Html.DropDownList("dropdown-name", Enumerable.Empty<SelectListItem>())
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SearchView.NppbkcId, Model.SearchView.NppbkcIdList, "All", new { @class = "form-control selectreset" })
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4 col-md-offset-8">
                                <div class="row">
                                    <div class="col-md-6">
                                        <button id="btnFILTER" class="btn btn-blue full">FILTER</button>
                                    </div>
                                    <div class="col-md-6">
                                        <input id="btnExport" type="button" class="btn btn-blue full" value="EXPORT" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            @using (Html.BeginForm("ExportMonitoringUsage", "Pbck1", FormMethod.Post, new { @id = "ExportMonitoringUsageForms" }))
            {
                <div class="white-wrapper toggle-wrapper">
                    <div class="form-excise" role="form">
                        <div class="row">

                            <div class="last-form">
                                <div class="col-md-12">
                                    <div>
                                        @Html.HiddenFor(model => model.ExportModel.CompanyCode)
                                        @Html.HiddenFor(model => model.ExportModel.YearFrom)
                                        @Html.HiddenFor(model => model.ExportModel.YearTo)
                                        @Html.HiddenFor(model => model.ExportModel.NppbkcId)

                                        <div class="row toggle">
                                            <div class="toggle-title">
                                                Toggle column <i class="fa fa-chevron-down"></i>
                                            </div>

                                            <div class="toggle-component">
                                                <div class="checkbox">
                                                    <label>
                                                        <input type="checkbox" id="selecctall" /><b>Select All</b>
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                    <label>
                                                        @Html.CheckBoxFor(model => model.ExportModel.Pbck1Decree, new { @id = "checkboxDefault1", @class = "checkbox checkexport", @datacolumn = "1" })Pbck-1 Decree
                                                    </label>
                                                </div>
                                                <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.Company, new { @id = "checkboxDefault2", @class = "checkbox checkexport", @datacolumn = "2" })Company
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.Nppbkc, new { @id = "checkboxDefault3", @class = "checkbox checkexport", @datacolumn = "3" })NPPBKC
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.Kppbc, new { @id = "checkboxDefault4", @class = "checkbox checkexport", @datacolumn = "4" })KPPBC
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.Pbck1Period, new { @id = "checkboxDefault5", @class = "checkbox checkexport", @datacolumn = "5" })PBCK-1 Period
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.ExcGoodsQuota, new { @id = "checkboxDefault6", @class = "checkbox checkexport", @datacolumn = "6" })Excisable Goods Quota
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.AdditionalExcGoodsQuota, new { @id = "checkboxDefault7", @class = "checkbox checkexport", @datacolumn = "7" })Additional Excisable Goods Quota
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.PrevYearsFinalBalance, new { @id = "checkboxDefault8", @class = "checkbox checkexport", @datacolumn = "8" })Previous Years Final Balance
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.TotalPbck1Quota, new { @id = "checkboxDefault9", @class = "checkbox checkexport", @datacolumn = "9" })Total Pbck-1 Quota
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.Received, new { @id = "checkboxDefault10", @class = "checkbox checkexport", @datacolumn = "10" })Received
                                                        </label>
                                                    </div>
                                                    <div class="checkbox">
                                                        <label>
                                                            @Html.CheckBoxFor(model => model.ExportModel.QuotaRemaining, new { @id = "checkboxDefault11", @class = "checkbox checkexport", @datacolumn = "11" })Quota Remaining
                                                        </label>
                                                    </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div id="contenttable" class="table-container">
        @Html.Partial("_Pbck1MonitoringUsageTable")
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    @* ReSharper disable UnknownCssClass *@
    @* ReSharper disable Html.IdNotResolved *@
    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
            setupDataTables();
            $('#MenuPbck1OpenDocument').removeClass('open');

            $('#MenuPbck1Report').addClass('open');

            $('#selecctall').prop('checked', false);
            $('.checkexport').each(function () {
                this.checked = true;
            });
            $('#MenuPBCK1MonitoringUsage').addClass('active');

            $('#SearchView_CompanyCode').change(function () {
                GetListNPPBKC_ID();
            });
        });

        function setupDataTables() {

            // DataTable
            var table;
            if ($.fn.dataTable.isDataTable('#pbckTable')) {
                table = $('#pbckTable').DataTable();
                table.destroy();
            }

            table = $('#pbckTable').DataTable(
                {
                    "order": [[0, 'asc'], [3, 'asc']],
                    "sDom": "Rlfrtip",
                    "language": {
                        "zeroRecords": "No records found",
                        "infoFiltered": "(filtered from _MAX_ total records)"
                    }
                });

            $('#btnFILTER').on('click', function (e) {
                $('#selecctall').prop('checked', false);
                $('.checkexport').each(function () {
                    this.checked = true;
                });
            });
            
        
            $('.checkexport').on('click', function (e) {
                //e.preventDefault();
                table.column(0).visible(true);

                // Get the column API object
                var column = table.column($(this).attr('datacolumn'));

                // Toggle the visibility
                column.visible(!column.visible());
                $('#pbckTable').parents('div.dataTables_wrapper').first().show();
            });


            $('#selecctall').change(function () {
                if ($(this).is(':checked')) {
                    $('.checkexport').prop('checked', this.checked);
                    // Show a column
                    $('#pbckTable').parents('div.dataTables_wrapper').first().show();
                    var table = $('#pbckTable').DataTable();
                    for (var i = 0; i < 12; i++) {
                        table.column(i).visible(true);

                    }
                    table.column(0).visible(true);
                   // Show a column
                    $('#pbckTable').parents('div.dataTables_wrapper').first().show();

                } else {
                    $('.checkexport').each(function () {
                        this.checked = false;

                    });
                    var table = $('#pbckTable').DataTable();
                    for (var i = 0; i < 12; i++) {
                        table.column(i).visible(false);

                    }
                    $('#pbckTable').parents('div.dataTables_wrapper').first().hide();
                }
            });
        }

        function ReloadDataTables() {
            setupDataTables();
        }

        function OnReset() {
            $(".selectreset").val($(".selectreset option:first").val());
        }

        $("#btnExport").click(function () {
            $('#ExportModel_CompanyCode').val($('#SearchView_CompanyCode').find("option:selected").val());
            $('#ExportModel_YearFrom').val($('#SearchView_YearFrom').find("option:selected").val());
            $('#ExportModel_YearTo').val($('#SearchView_YearTo').find("option:selected").val());
            $('#ExportModel_NppbkcId').val($('#SearchView_NppbkcId').find("option:selected").val());
            $('#ExportMonitoringUsageForms').submit();
        });


        $("#btnConfirm").click(function () {
            $('#ExportModel_CompanyCode').val($('#SearchView_CompanyCode').find("option:selected").val());
            $('#ExportModel_YearFrom').val($('#SearchView_YearFrom').find("option:selected").val());
            $('#ExportModel_YearTo').val($('#SearchView_YearTo').find("option:selected").val());
            $('#ExportModel_NppbkcId').val($('#SearchView_NppbkcId').find("option:selected").val());
            $('#ExportMonitoringUsageForms').submit();
            preventDefault();
        });

        function GetListNPPBKC_ID() {
            var CompanyCode_BUKRS = "";
            if ($("#SearchView_CompanyCode").length) {
                CompanyCode_BUKRS = $('#SearchView_CompanyCode').find("option:selected").val();
            }
            ajaxLoadNppbkcListByCompanyCode(CompanyCode_BUKRS, '@Url.Action("GetNPPBKCListByCompanyID", "pbck1")');
        }

        function ajaxLoadNppbkcListByCompanyCode(formData, url) {
            $.ajax({
                type: 'POST',
                url: url,
                data: { companyId: formData },
                success: function (data) {
                    $("#SearchView_NppbkcId").empty();
                    $("#SearchView_NppbkcId").append("<option value=''>All</option>");
                    $.each(data, function (index, val) {
                        $("#SearchView_NppbkcId").append("<option value='" + val + "'>" + val + "</option>");
                    });
                }
            });
        }

    </script>
    @* ReSharper restore Html.IdNotResolved *@
    @* ReSharper restore UnknownCssClass *@
}