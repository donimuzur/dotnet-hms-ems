
@model Sampoerna.EMS.Website.Models.Tariff.TariffViewModel

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger" style="padding-left: 30px">
        @Html.ValidationSummary()
    </div>
}
<div class="row">
    @Html.HiddenFor(model => model.ViewModel.Id)
    <!-- Product Type Selector -->
    <div class="col-md-12">
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.ProductTypeCode, "Product Type")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    @Html.DropDownListFor(model => model.ViewModel.ProductTypeCode, Model.ProductTypeList, null, new { @class = "selectpicker form-control", @id = "ProductTypeSelector" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.ViewModel.ProductType.ProductType, new { @class = "form-control", @type = "text", @id = "ProductTypeSelector", @readonly = "true" })
                }
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.ProductTypeCode)
            </div>
        </div>
    </div>
</div>
<!-- End Product Type Selector -->
<!-- HJE  -->
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.MinimumHJE, "Minimum HJE")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    @Html.TextBoxFor(model => model.ViewModel.MinimumHjeDisplay, new { @class = "form-control text-right", @type = "text", @id = "MinimumHje", @required = true })
                }
                else
                {
                    @Html.TextBoxFor(model => model.ViewModel.MinimumHjeDisplay, new { @class = "form-control text-right", @type = "text", @id = "MinimumHje", @readonly = "true" })
                }
                @Html.HiddenFor(model => model.ViewModel.MinimumHJE)
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.MinimumHJE)
            </div>

        </div>
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.MaximumHJE, "Maximum HJE")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    @Html.TextBoxFor(model => model.ViewModel.MaximumHjeDisplay, new { @class = "form-control text-right", @type = "text", @id = "MaximumHje", @required = true })
                }
                else
                {
                    @Html.TextBoxFor(model => model.ViewModel.MaximumHjeDisplay, new { @class = "form-control text-right", @type = "text", @id = "MaximumHje", @readonly = "true" })
                }
                @Html.HiddenFor(model => model.ViewModel.MaximumHJE)
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.MaximumHJE)
            </div>
        </div>
    </div>
</div>
<!-- End HJE -->
<!-- Valid Date -->
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.ValidStartDate, "Valid From")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.ViewModel.ValidStartDate, "{0:dd MMM yyyy}", new { @class = "form-control"})
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                    </div>
                }
                else
                {
                    @Html.TextBoxFor(model =>  model.ViewModel.ValidStartDate, "{0:dd MMMM yyyy}", new { @class = "form-control", @type = "text", @id = "ValidStartDate", @readonly = "true" })
                }
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.ValidStartDate)
            </div>
        </div>
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.ValidEndDate, "Valid To")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.ViewModel.ValidEndDate, "{0:dd MMM yyyy}", new { @class = "form-control"})
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                    </div>
                }
                else
                {
                    @Html.TextBoxFor(model => model.ViewModel.ValidEndDate, "{0:dd MMMM yyyy}", new { @class = "form-control", @type = "text", @id = "ValidEndDate", @readonly = "true" })
                }
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.ValidEndDate)
            </div>
        </div>
    </div>
</div>
<!-- End Valid Date-->
<!-- Tariff -->
<div class="row">
    <div class="col-md-12">
        <div class="row">
            <label class="col-md-3">
                @Html.LabelFor(model => model.ViewModel.Tariff, "Tariff")
                @if (Model.EnableFormInput)
                {
                    <span class="red">*</span>
                }
            </label>
            <div class="col-md-9">
                @if (Model.EnableFormInput)
                {
                    @Html.TextBoxFor(model => model.ViewModel.TariffDisplay, new { @class = "form-control text-right", @type = "text", @id = "Tariff", @required = true })
                }
                else
                {
                    @Html.TextBoxFor(model => model.ViewModel.TariffDisplay, new { @class = "form-control text-right", @type = "text", @id = "Tariff", @readonly = "true" })
                }
                @Html.HiddenFor(model => model.ViewModel.Tariff)
            </div>
            <div class="col-md-9 col-md-offset-3">
                @Html.ValidationMessageFor(model => model.ViewModel.Tariff)
            </div>
        </div>
    </div>
</div>
<!-- End Tariff-->

@if (Model.EnableFormInput)
{
    <div class="row">
        <div class="col-md-12">
            <span class="red">*</span> ) This Field Required
        </div>
    </div>
}


