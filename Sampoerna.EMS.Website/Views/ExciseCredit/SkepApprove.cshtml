


@model Sampoerna.EMS.Website.Models.ExciseCredit.ExciseCreditFormModel
@{
    ViewBag.Title = "SKEP Approve";
}

@Html.HiddenFor(model => model.ViewModel.DocumentNumber)
@using (Html.BeginForm("Approve", "ExcisCredit", null, FormMethod.Post, new { id = "ApproveSkepForm", @class = "form-excise", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => Model.SkepInput.Id)
}

@using (Html.BeginForm("RejectSkep", "ExcisCredit", null, FormMethod.Post, new { id = "SkepForm", @class = "form-excise", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-wrap title-page">
        <div class="row">
            <div class="col-sm-12">
                <h3>Excise Credit Form</h3>
                <label class="status">@Model.ViewModel.ApprovalStatus.Value</label>
                <label class="status" id="docNumber">@Model.ViewModel.DocumentNumber</label>
                <div class="clearfix"></div>
                <div class="action-button">
                    <button class="btn btn-blue" id="RejectButton" type="button">Reject</button>
                    <button class="btn btn-blue" id="ApproveButton" type="button" data-target=".approve-modal.excisecredit-skep">Approve</button>
                    <a href="@Url.Action("Index", "ExciseCredit")" class="btn btn-grey">Cancel</a>
                </div>

            </div>
        </div>
    </div>
    <div class="container-wrap">
        <div class="row">
            <div class="col-sm-12">

                <div role="tabpanel">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" id="home-tab" class="active"><a href="#home" aria-controls="home" role="tab" data-toggle="tab">Information</a></li>
                        <li role="presentation"><a href="#skep" aria-controls="profile" role="tab" data-toggle="tab">SKEP Input</a></li>
                        <li role="presentation"><a href="#changes" aria-controls="changes" role="tab" data-toggle="tab">Changes Log</a></li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        @Html.Partial("_DetailExciseForm", Model)
                        @*<div role="tabpanel" class="tab-pane" id="skep">
                            <div class="row">
                                <div class="col-md-12">

                                    @Html.Partial("_SkepDetail", Model.SkepInput)

                                </div>
                            </div>
                        </div>*@
                        @Html.Partial("_Printout", Model)
                        <div role="tabpanel" class="tab-pane" id="changes">
                            <div class="table-container">
                                @Html.Partial("_ChangesHistoryTable", Model)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<!-- Modals -->
@Html.Partial("_ConfirmDialog", Model.ApproveConfirm)

<div id="errModal" class="modal ems-modal fade bs-example-modal-sm danger" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>*@
                <h4 class="modal-title" id="errModalTitle"></h4>
            </div>
            <div class="modal-body">
                <p id="errModalContent"></p>

            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Ok" />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.form.min.js"></script>
    <script src="~/Scripts/UploadExcel.js"></script>
    <script src="~/Scripts/autoNumeric.min.js"></script>
    <script src="~/Scripts/excise-credit/terbilang.js"></script>
    <script src="~/Scripts/excise-credit/terbilang.min.js"></script>
    <script src="~/Scripts/excise-credit/date.js"></script>
    <script src="~/Scripts/excise-credit/main.js"></script>
    <script type="text/javascript">
        var formID = '@Model.ViewModel.Id';
        var formType = '@Convert.ToInt64(Sampoerna.EMS.Core.Enums.FormList.ExciseRequest)';
        var totalProducts = '@Model.SkepInput.AvailableProductTypes.Count()';
        var skepAttachment = undefined;
        var bpjAttachment = undefined;

        Number.prototype.formatMoney = function (c, d, t) {
            var n = this,
                c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? "." : d,
                t = t == undefined ? "," : t,
                s = n < 0 ? "-" : "",
                i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
                j = (j = i.length) > 3 ? j % 3 : 0;
            return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
        };
        $(document).ready(function () {

            var amount = Number($("#ViewModel_Amount").val().split(',').join('.'));
            var _terbilang = terbilang(amount.toString()) + " Rupiah";
            $("#ExciseCreditAlphaText").html(_terbilang);
            loadOtherDocs();
            loadApprovedProducts();
            $.extend($.fn.autoNumeric.defaults, {
                aSep: '@System.Threading.Thread.CurrentThread.CurrentCulture.NumberFormat.NumberGroupSeparator',
                aDec: '@System.Threading.Thread.CurrentThread.CurrentCulture.NumberFormat.NumberDecimalSeparator',
                aSign: '',
                vMin: '0.00',
                vMax: '999999999999999999999.99',
                lZero: 'allow',
                wEmpty: 'press'
            });
            $("#CreditAmountDisplay").autoNumeric('init');
            $("#ProductAmountInput").autoNumeric('init');

            $('#ApproveButtonConfirm').on('click', function (e) {
                e.preventDefault();
                approve();
            });
            
            $('#RejectButton').on('click', function (e) {
                e.preventDefault();
                rejectSkep();
            });
        });

        function generateFormData() {
            var id = $("#Id").val();
            var notes = $("#Notes").val();

            if (!notes) {
                showErrorDialog("SKEP rejection notes is required!");
                return;
            }

            var form = $("#SkepForm");
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            if (window.FormData !== undefined) {
                var data = new FormData();
                data.append("__RequestVerificationToken", token);
                data.append("id", id);
                data.append("notes", notes);

                return data;
            }

        }

        function rejectSkep() {
            var data = generateFormData();
            if (!data) {
                showErrorDialog('Form data not available!');
                return;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("RejectSkep", "ExciseCredit")',
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    $("#customloader").hide();
                    console.log(result);
                    document.location.href = '@Url.Action("Index", "ExciseCredit")';
                },
                error: function (xhr, status, p3, p4) {
                    $("#customloader").hide();
                    var err = "Error " + " " + status + " " + p3 + " " + p4;
                    if (xhr.responseText && xhr.responseText[0] == "{")
                        err = JSON.parse(xhr.responseText).Message;
                    console.log(err);
                    showErrorDialog(err);
                }
            });
            $("#RejectButton").prop("disabled", true);
        }

        function approve() {
            $("#ApproveSkepForm").submit();
            $("#SkepApproveModal").modal('toggle');
            $("#ApproveButton").prop("disabled", true);
        }

        function loadOtherDocs() {

            $("#customloader").show();
            $.ajax({
                url: '@Url.Action("GetOtherDocuments")',
                type: 'POST',
                data: JSON.stringify({
                    type: Number(formType),
                    id: formID
                }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#customloader").hide();
                    if (response && response.length > 0) {
                        for (var i = 0; i < response.length; i++) {
                            otherDocs[i] = response[i];
                            otherDocsName[i] = response[i].FileName;
                            var parts = response[i].PathURL.split('/');
                            otherDocs[i].name = parts[parts.length - 1];
                            existingOtherDocs[otherDocs[i].FileID] = {
                                active: true,
                                index: i
                            };
                        }
                        console.log("Other docs: ");
                        console.log(otherDocs);
                        console.log("Existing Other docs: ");
                        console.log(existingOtherDocs);
                        renderFileList();

                    }
                },
                error: function () {
                    $("#customloader").hide();
                }
            });
        }

        function loadApprovedProducts() {

            $("#customloader").show();
            $.ajax({
                url: '@Url.Action("GetApprovedProduct")',
                type: 'POST',
                data: JSON.stringify({
                    id: formID
                }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#customloader").hide();
                    if (response && response.length > 0) {
                        registeredProducts = [];
                        for (var i = 0; i < response.length; i++) {
                            registeredProducts[i] = {
                                id: response[i].ExciseId,
                                alias: response[i].ProductAlias,
                                amount: response[i].Amount,
                                amount_display: Number(response[i].Amount).formatMoney(2)
                            };
                        }
                        renderProducts();

                    }
                },
                error: function () {
                    $("#customloader").hide();
                }
            });
        }
        var registeredProducts = [];

        function renderProducts() {
            console.log(registeredProducts);
            var container = $("#ProductTypeContainer");
            var content = '';
            for (var i = 0; i < registeredProducts.length; i++) {

                content += '<tr>' +
                '<td>' +
                '<input type="hidden" name="productsids" value="' + registeredProducts[i].id + '" />' +
                '<input class="form-control" type="text" value="' + registeredProducts[i].alias + '" readonly />' +
                '</td>' +
                '<td>' +
                '<input class="form-control" type="text" name="productsamounts" value="' + registeredProducts[i].amount_display + '" readonly />' +
                '</td>' +

                '</tr>';

            }

            if (!content || content == '') {
                content = '<td colspan="2">' +
                    '<div class="alert alert-info">' +
                    'No Products Added' +
                    '</div>' +
                    '</td>'
            }
            container.html(content);
            var sum = calculateAmount();
            $("#CreditAmount").val(sum);
            $("#CreditAmountDisplay").autoNumeric('set', sum);
        }

        function calculateAmount() {
            var sum = 0;
            for (var i = 0; i < registeredProducts.length; i++) {
                sum += registeredProducts[i].amount;
            }

            return sum;
        }


    </script>
}
