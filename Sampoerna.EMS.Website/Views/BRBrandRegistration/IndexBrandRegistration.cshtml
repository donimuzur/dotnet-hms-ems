@model Sampoerna.EMS.Website.Models.BrandRegistrationTransaction.BrandRegistration.BrandRegistrationReqViewModel
@using Sampoerna.EMS.Core;


<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <h3 id="lblTitle">Brand Registration List</h3>
            @if (Model.IsNotViewer)
            {
                <div class="action-button new">
                    <a href="@Url.Action("CreateBrandRegistration", "BRBrandRegistration")">
                        <button class="btn btn-blue">New</button>
                    </a>
                </div>
            }

        </div>
    </div>
</div>
<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            <div class="white-wrapper">
                @*<div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-6">NPPBKC ID</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.SearchInput.NppbkcId, Model.SearchInput.NppbkcIdList, "All", new { @class = "form-control selectreset" })
                            </div>
                        </div>
                    </div>
                </div>*@
                @using (Ajax.BeginForm("FilterOpenDocument", "BRBRandRegistration",
                        new AjaxOptions
                        {
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "contenttable",
                            OnComplete = "ReloadDataTables"
                        }, new { @class = "form-excise", role = "form" }))
                {
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-6">Registration Type</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.SearchInput.RegistrationType, Model.SearchInput.ListRegistrationType, null, new { @class = "selectpicker form-control", @id = "FormNameSelector" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-6">Creator</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.SearchInput.Creator, Model.SearchInput.CreatorList, "All", new { @class = "form-control selectreset" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-6">
                                <input id="btn-filter" type="submit" class="btn btn-blue full" value="FILTER" />
                            </div>
                            <div class="col-md-6">
                                <button type="button" id="btn-reset-filter" class="btn btn-blue full">RESET</button>
                            </div>
                        </div>
                    </div>
                </div>
                }
                <div id="contenttable" class="table-container">
                    @Html.Partial("_BRandRegistrationTable")
                </div>

            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/js/custom.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" language="javascript" class="init">
        $(document).ready(function () {
            $('#MenuSKEP').removeClass('open');
            $('#MenuProduct').removeClass('open');

            $('#MenuBrand').addClass('open');
            $('#MenuBrandRegistration').addClass('active');

            $('#btn-reset-filter').click(function () {
                $(".selectpicker").val($(".selectpicker option:first").val());
                $(".selectreset").val($(".selectreset option:first").val());
            });

        setupDataTables();
    });


    function setupDataTables() {

        var table = null;
        if ($.fn.dataTable.isDataTable('#brandRegTable')) {
            table = $('#brandRegTable').DataTable();
            table.destroy();
        }

        table = $('#brandRegTable').DataTable(
              {
                  "sDom": "Rlfrtip",
                  "language": {
                      "zeroRecords": "No records found",
                      "infoFiltered": "(filtered from _MAX_ total records)"
                  }
              });


        $('#brandRegTable .filters th').each(function () {
            var idx = $(this).index();
            if (idx != 0) {
                $(this).html('<input type="text" placeholder="Search" style="width:100%" />');
            }
        });


        table.columns().eq(0).each(function (colIdx) {
            $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                table
                    .column(colIdx)
                    .search(this.value)
                    .draw();
            });
        });
    }
    
    function ReloadDataTables() {
        $('.toggle-row').click(function () {

            var filter = $(".filters");
            filter.slideToggle(100).promise().done(function () {

            });
        });
        $('.loading').hide();
        setupDataTables();
    }

    </script>

}

