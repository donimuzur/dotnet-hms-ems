@model Sampoerna.EMS.Website.Models.XmlLog.XmlLogIndexViewModel

<div class="container-wrap title-page">
    <div class="row">
        <div class="col-sm-12">
            <h3 id="lblTitle">XML Log List</h3>

        </div>
    </div>
</div>


<div class="container-wrap">
    <div class="row">
        <div class="col-sm-12">
            @using (Ajax.BeginForm("Filter", "XmlLog",
                                new AjaxOptions
                                {
                                    HttpMethod = "POST",
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = "contenttable",
                                    OnComplete = "ReloadDataTables"

                                }))
            {
                @Html.Partial("_XmlLogSearch")
            }

            <div class="white-wrapper">
                <div class="form-excise" role="form">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-6">

                                </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-6">
                                    <input class="btn btn-blue" id="btnBackup" type="button" value="Backup" />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="contenttable" class="table-container">
                @Html.Partial("_XmlLogViewIndex")
            </div>



        </div>
    </div>
</div>


<div id="xmlLogModal" class="modal ems-modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Backup</h4>
            </div>
            @*<div class="modal-body">
                    Backup data?
                </div>
                <div class="modal-footer">
                    <input type="button" id="btnConfirmBackup" class="btn btn-blue" value="Yes" />
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
                </div>*@
            @using (Html.BeginForm("BackupXml", "XmlLog", FormMethod.Post, new { @id = "XmlLogBackupForms" }))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.FileName)
                    @Html.HiddenFor(model => model.Month)

                    Backup data?

                </div>
                <div class="modal-footer">

                    <input type="button" class="btn btn-blue" value="Yes" id="btnConfirmBackup" />
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
                </div>
            }
        </div>
    </div>
</div>


@section scripts {
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" language="javascript">

        $(document).ready(function () {
            $('#MenuXmlLog').addClass('active');

            setupDataTables();

            $("#btnBackup").click(function () {
                $('#xmlLogModal').modal('show');

            });

            $("#btnConfirmBackup").click(function () {

                $("input[name='FileName']").val($('#FileName').find("option:selected").val());
                $("input[name='Month']").val($('#Month').find("option:selected").val());

                $('#XmlLogBackupForms').submit();
            });

            OnChangeFileName();
            OnChangeMonth();
        });


        function setupDataTables() {

            // DataTable
            var table = null;
            if ($.fn.dataTable.isDataTable('#xmlLogTable')) {
                table = $('#xmlLogTable').DataTable();
                table.destroy();
            }

            table = $('#xmlLogTable').DataTable(
                  {
                      "sDom": "Rlfrtip",
                      "language": {
                          "zeroRecords": "No records found",
                          "infoFiltered": "(filtered from _MAX_ total records)"
                      },
                      "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                          switch (aData[2]) {
                              case 'Error':
                              case 'Fatal':
                                  $(nRow).css('color', 'red');
                                  break;
                              case 'Info':
                                  $(nRow).css('color', 'green');
                                  break;
                              case 'Warn':
                                  $(nRow).css('color', 'yellow');
                                  break;
                          }
                      }
                  });


            $('#xmlLogTable .filters th').each(function () {
                var idx = $(this).index();
                if (idx != 0) {
                    $(this).html('<input type="text" placeholder="Search" style="width:100%" />');
                }
            });


            table.columns().eq(0).each(function (colIdx) {
                $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                    table
                        .column(colIdx)
                        .search(this.value)
                        .draw();
                });
            });


        }

        function ReloadDataTables() {
            $("#btnBackup").prop('disabled', false);
            setupDataTables();
        }


        function OnChangeFileName() {
            $("#FileName").change(function () {
                $("#btnBackup").prop('disabled', true);
            });
        }

        function OnChangeMonth() {
            $("#Month").change(function () {
                $("#btnBackup").prop('disabled', true);
            });
        }

        function OnReset() {
            $(".selectreset").val($(".selectreset option:first").val());
        }

    </script>
}
