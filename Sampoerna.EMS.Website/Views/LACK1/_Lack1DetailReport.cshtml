@using Sampoerna.EMS.Core
@using EnumHelper = Sampoerna.EMS.Utils.EnumHelper
@model Sampoerna.EMS.Website.Models.LACK1.Lack1DetailReportViewModel

<table id="lack1Table" border="0" class="table table-bordered">
    <thead>
        <tr>
            <th rowspan="2">LACK-1 Number</th>
            <th rowspan="2">LACK-1 Level</th>
            <th rowspan="2">Begining Balance</th>
            <th colspan="6">Receiving</th>
            <th colspan="5">Usage</th>
            <th rowspan="2">Production Qty</th>
            <th rowspan="2">Ending Balance</th>
            <th rowspan="2">POA</th>
            <th rowspan="2">Creator</th>
        </tr>
        <tr>
            <th>CK-5 Number</th>
            <th>CK-5 Type</th>
            <th>CK-5 Registration Number</th>
            <th>CK-5 Registration Date</th>
            <th>CK-5 GR Date</th>
            <th>Qty</th>
            <th>GI Date</th>
            <th>Material Code</th>
            <th>Usage Qty</th>
            <th>Original Uom</th>
            <th>Converted Uom</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DetailList)
        {
            if (item.TrackingConsolidations.Count > 0)
            {
                var trackingConsolidationCount = item.TrackingConsolidations.Count;

                var lastMaterialCode = item.TrackingConsolidations[0].MaterialCode;
                var lastBatch = item.TrackingConsolidations[0].Batch;
                var lastDate = item.TrackingConsolidations[0].GiDate;

                <tr>
                    <td rowspan="@trackingConsolidationCount">@item.Lack1Number</td>
                    <td rowspan="@trackingConsolidationCount">@item.Lack1LevelName</td>
                    <td rowspan="@trackingConsolidationCount">@item.BeginingBalance.ToString("N2")</td>
                    <td>@item.TrackingConsolidations[0].Ck5Number</td>
                    <td>@item.TrackingConsolidations[0].Ck5TypeText</td>
                    <td>@item.TrackingConsolidations[0].Ck5RegistrationNumber</td>
                    <td>@item.TrackingConsolidations[0].Ck5RegistrationDate</td>
                    <td>@item.TrackingConsolidations[0].Ck5GrDate</td>
                    <td>@item.TrackingConsolidations[0].Qty.ToString("N2")</td>
                    <td>@item.TrackingConsolidations[0].GiDate</td>
                    <td>@item.TrackingConsolidations[0].MaterialCode</td>
                    @if (string.IsNullOrEmpty(item.TrackingConsolidations[0].MaterialCode))
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                    }
                    else
                    {
                        if (item.TrackingConsolidations[0].UsageQty.HasValue)
                        {
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount">@((item.TrackingConsolidations[0].UsageQty.Value).ToString("N3"))</td>
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount">@item.TrackingConsolidations[0].OriginalUomDesc</td>
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount">@item.TrackingConsolidations[0].ConvertedUomDesc</td>
                        }
                        else
                        {
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount"></td>
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount">@item.TrackingConsolidations[0].OriginalUomDesc</td>
                            <td rowspan="@item.TrackingConsolidations[0].MaterialCodeUsageRecCount">@item.TrackingConsolidations[0].ConvertedUomDesc</td>
                        }
                    }
                    <td rowspan="@trackingConsolidationCount">@item.ProdQty</td>
                    <td rowspan="@trackingConsolidationCount">@item.EndingBalance.ToString("N2")</td>
                    <td rowspan="@trackingConsolidationCount">@item.Poa</td>
                    <td rowspan="@trackingConsolidationCount">@item.Creator</td>
                </tr>
                for (int i = 1; i < item.TrackingConsolidations.Count; i++)
                {
                    var curMaterialCode = item.TrackingConsolidations[i].MaterialCode;
                    var curBatch = item.TrackingConsolidations[i].Batch;
                    var curDate = item.TrackingConsolidations[i].GiDate;
                    <tr>
                        <td>@item.TrackingConsolidations[i].Ck5Number</td>
                        <td>@item.TrackingConsolidations[i].Ck5TypeText</td>
                        <td>@item.TrackingConsolidations[i].Ck5RegistrationNumber</td>
                        <td>@item.TrackingConsolidations[i].Ck5RegistrationDate</td>
                        <td>@item.TrackingConsolidations[i].Ck5GrDate</td>
                        <td>@item.TrackingConsolidations[i].Qty.ToString("N2")</td>
                        <td>@item.TrackingConsolidations[i].GiDate</td>
                        <td>@item.TrackingConsolidations[i].MaterialCode</td>
                        @if (string.IsNullOrEmpty(item.TrackingConsolidations[i].MaterialCode))
                        {
                            <td></td>
                            <td></td>
                            <td></td>
                        }
                        else
                        {
                            if (item.TrackingConsolidations[i].Ck5TypeText == EnumHelper.GetDescription(Enums.CK5Type.Manual))
                            {
                                /*Force to print out to views*/
                                if (item.TrackingConsolidations[i].UsageQty.HasValue)
                                {
                                    <td>@((item.TrackingConsolidations[i].UsageQty.Value).ToString("N3"))</td>
                                    <td>@item.TrackingConsolidations[i].OriginalUomDesc</td>
                                    <td>@item.TrackingConsolidations[i].ConvertedUomDesc</td>
                                }
                                else
                                {
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                }
                            }
                            else
                            {
                                if (!(lastBatch == curBatch && lastDate == curDate && lastMaterialCode == curMaterialCode))
                                {
                                    if (item.TrackingConsolidations[i].UsageQty.HasValue)
                                    {
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount">@((item.TrackingConsolidations[i].UsageQty.Value).ToString("N3"))</td>
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount">@item.TrackingConsolidations[i].OriginalUomDesc</td>
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount">@item.TrackingConsolidations[i].ConvertedUomDesc</td>
                                    }
                                    else
                                    {
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount"></td>
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount"></td>
                                        <td rowspan="@item.TrackingConsolidations[i].MaterialCodeUsageRecCount"></td>
                                    }
                                }
                            }

                        }
                    </tr>
                        lastMaterialCode = curMaterialCode;
                        lastBatch = curBatch;
                        lastDate = curDate;
                }
            }
            else
            {
                <tr>
                    <td>@item.Lack1Number</td>
                    <td>@item.Lack1LevelName</td>
                    <td>@item.BeginingBalance.ToString("N2")</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>@item.ProdQty</td>
                    <td>@item.EndingBalance.ToString("N2")</td>
                    <td>@item.Poa</td>
                    <td>@item.Creator</td>
                </tr>
            }
        }
    </tbody>
</table>
