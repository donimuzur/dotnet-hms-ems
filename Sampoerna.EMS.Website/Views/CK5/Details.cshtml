@using iTextSharp.text.pdf.qrcode
@using Sampoerna.EMS.Core
@using Sampoerna.EMS.Website.Helpers
@model Sampoerna.EMS.Website.Models.CK5.CK5FormViewModel

@using (Html.BeginForm(Model.ActionType, "CK5", FormMethod.Post, new { @id = "GovApproveForm", enctype = "multipart/form-data" }))
{
    <div class="container-wrap title-page">
        <div class="row">
            <div class="col-sm-12">
                <h3>@Model.Ck5TypeString &nbsp; #@Model.SubmissionNumber</h3>
                <label class="status">@Model.DocumentStatusDescription</label>
                <div class="action-button">

                    <input type="button" value="Back" class="btn btn-blue" id="btnBack" />
                    <input type="button" class="btn btn-grey" value="Print Preview" onclick="printPreview('@Url.EncryptedAction("PrintPreview", "CK5", new { id = @Model.Ck5Id })')" />

                    @if (Model.AllowApproveAndReject)
                    {
                        <input type="button" class="btn btn-blue" value="Approve" id="btnApprove" />
                        <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                    }
                    else
                    {
                        if (Model.AllowGovApproveAndReject)
                        {
                            <input type="button" class="btn btn-blue" value="Save" id="btnSaveGovStatus" />
                        }
                        else if (Model.AllowGiCreated || Model.AllowGrCreated
                            || Model.AllowTfPostedPortToImporter
                            || Model.AllowGoodIssue || Model.AllowGoodReceive
                            || Model.AllowPurchaseOrder)
                        {
                            <input type="button" class="btn btn-blue" value="Save" id="btnGiCreated" />
                        }
                         else if (Model.AllowWasteDisposal || Model.AllowWasteApproval)
                        {
                            
                            if (Model.AllowWasteApproval)
                            {
                                <input type="button" class="btn btn-blue" value="Approve" id="btnSaveWaste" />
                                <input type="button" class="btn btn-danger" value="Reject" id="btnDisposalReject" />
                            }
                            else
                            {
                                <input type="button" class="btn btn-blue" value="Save" id="btnSaveWaste" /> 
                            }

                        }

                        if (Model.AllowManagerReject)
                        {
                            <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                        }
                        if (Model.AllowCancelSAP)
                        {
                            <input type="button" class="btn btn-danger" value="Cancel" id="btnCancelSAP" />
                        }

                        if (Model.AllowAttachmentCompleted)
                        {
                            <input type="button" class="btn btn-blue" value="Save" id="btnSaveAttachment" />
                        }
                        
                        if (Model.AllowAttachment)
                        {
                            <input type="button" class="btn btn-blue" value="Save" id="btnAllowAttachment" />
                        }
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container-wrap">
        <div class="row">
            <div class="col-sm-12">
                <div role="tabpanel">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" id="home-tab" class="active"><a href="#information" aria-controls="information" role="tab" data-toggle="tab">Information</a></li>
                        <li role="presentation"><a href="#printout" aria-controls="printout" role="tab" data-toggle="tab">Print Out</a></li>
                        <li role="presentation"><a href="#changes" aria-controls="changes" role="tab" data-toggle="tab">Changes Log</a></li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        @Html.HiddenFor(model => model.Ck5Id)
                        @Html.HiddenFor(model => model.Ck5Type)
                        @Html.HiddenFor(model => model.DocumentStatus)

                        @Html.HiddenFor(model => model.IsCk5Export)
                        @Html.HiddenFor(model => model.IsCk5PortToImporter)
                        @Html.HiddenFor(model => model.IsCk5ImporterToPlant)

                        @Html.HiddenFor(model => model.CountryCode)
                        @Html.HiddenFor(model => model.CountryName)

                        @Html.HiddenFor(model => model.LoadingPort)
                        @Html.HiddenFor(model => model.LoadingPortId)
                        @Html.HiddenFor(model => model.LoadingPortName)
                        @Html.HiddenFor(model => model.FinalPort)
                        @Html.HiddenFor(model => model.FinalPortId)
                        @Html.HiddenFor(model => model.FinalPortName)


                        @if (Model.IsWaitingGovApproval && Model.AllowGovApproveAndReject)
                        {
                            @Html.HiddenFor(model => model.KppBcCity)
                            @Html.HiddenFor(model => model.GoodTypeName)
                            @Html.HiddenFor(model => model.SourcePlantId)
                            @Html.HiddenFor(model => model.DestPlantId)
                            if (Model.IsMarketReturn)
                            {
                                @Html.Partial("_CK5GovApprovalMarketReturn")
                            }
                            else
                            {
                                @Html.Partial("_CK5GovApproval")
                            }

                        }
                        else if (Model.AllowGiCreated || Model.AllowGrCreated
                                || Model.AllowTfPostedPortToImporter
                                || Model.AllowGoodIssue || Model.AllowGoodReceive)
                        {
                            @Html.HiddenFor(model => model.KppBcCity)
                            @Html.HiddenFor(model => model.GoodTypeName)
                            @Html.HiddenFor(model => model.SourcePlantId)
                            @Html.HiddenFor(model => model.DestPlantId)


                            @Html.Partial("_CK5SealingInput")
                        }
                        else if (Model.AllowPurchaseOrder)
                        {
                            @Html.HiddenFor(model => model.KppBcCity)
                            @Html.HiddenFor(model => model.GoodTypeName)
                            @Html.HiddenFor(model => model.SourcePlantId)
                            @Html.HiddenFor(model => model.DestPlantId)


                            @Html.Partial("_CK5POReceive")
                        }
                        else
                        {
                            if (Model.IsMarketReturn)
                            {
                                @Html.Partial("_CK5InformationDetailsMarketReturn")
                            }
                            else
                            {
                                @Html.Partial("_CK5InformationDetails")
                            }
                        }



                        @Html.Partial("_CK5Printout")
                        @Html.Partial("_CK5ChangeLog")



                    </div>
                    @if (Model.IsWaitingGovApproval && Model.AllowGovApproveAndReject)
                    {
                        <div class="col-md-12">
                            <span class="red">*</span> ) This Field Required
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div id="Ck5Modal" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    <h3><span id="lblTitleModal">Approval</span> </h3>
                </div>
                <div class="modal-body">
                    <span id="lblMessageModal">Approve Documents ?</span>
                </div>
                <div class="modal-footer">
                    <input type="button" id="btnConfirm" class="btn btn-blue" value="Yes" />
                    <input type="button" id="btnConfirmGovApprove" class="btn btn-blue" value="Yes" />
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
                </div>
            </div>
        </div>
    </div>
}



<div id="Ck5ModalReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Reject document</h4>
            </div>
            @using (Html.BeginForm("RejectDocument", "CK5"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Ck5Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Comment, new { @rows = "5", @class = "col-md-9" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmReject" />
                </div>
            }
        </div>
    </div>
</div>


<div id="Ck5ModalDisposalReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Disposal Reject document</h4>
            </div>
            @using (Html.BeginForm("RejectDisposalDocument", "CK5"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Ck5Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Comment, new { @id="CommentDisposalReject", @rows = "5", @class = "col-md-9" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" disabled id="btnConfirmDisposalReject" />
                </div>
            }
        </div>
    </div>
</div>

<div id="ModalCk5ValidateGov" class="modal ems-modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"> Error</h4>
            </div>
            <div class="modal-body">
                <p>
                    <span id="modalBodyMessage">Missing attach files</span>
                </p>

            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Ok" />
            </div>
        </div>
    </div>
</div>

<div id="Ck5ModalCancelSap" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h3><span id="lblTitleModal">Cancel </span> </h3>
            </div>
            <div class="modal-body">
                <span id="lblMessageModal">Cancel Documents ?</span>
            </div>
            <div class="modal-footer">
                <input type="button" id="btnConfirmCancel" class="btn btn-blue" value="Yes" />
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
            </div>
        </div>
    </div>
</div>

<div id="ck5ModalSaveAttachmentConfirm" class="modal ems-modal fade delete-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Save</h4>
            </div>
            <div class="modal-body">
                are you sure already uploaded document?
            </div>
            <div class="modal-footer">
                <input type="button" id="btnConfirmSaveAttachment" class="btn btn-blue" value="Yes" />
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
            </div>
        </div>
    </div>
</div>



@section scripts {
    <script src="~/Scripts/CK5Scripts.js"></script>
    @*@if ((Model.IsWaitingGovApproval && Model.AllowGovApproveAndReject)
         || Model.AllowAttachmentCompleted || Model.AllowWasteDisposal)
        {
            <script src="~/Scripts/jquery.form.min.js"></script>
            <script src="~/Scripts/UploadExcel.js"></script>
            <script src="~/Scripts/CK5ScriptUploadGovFile.js"></script>

        }*@

    <script src="~/Scripts/jquery.form.min.js"></script>
    <script src="~/Scripts/UploadExcel.js"></script>
    <script src="~/Scripts/CK5ScriptUploadGovFile.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {

       

            if ('@Model.DocumentStatus' == '@Enums.DocumentStatus.Completed.ToString()' || '@Model.DocumentStatus' == '@Enums.DocumentStatus.Cancelled.ToString()') {
                OnReadyFunction('@Model.DocumentStatus');
                if ('@Model.Ck5Type' == '@Enums.CK5Type.MarketReturn.ToString()') {
                    $('#liCK5MarketReturnCompleted').addClass('active');
                }

            } else {
                OnReadyFunction('@Model.Ck5Type.ToString()');
            }
            openGovStatusBlock();

            $('#btn-changelog-export-xls').click(function() {
                location.href = '@Url.Action("ExportXls", "CK5", new {ck5Id = Model.Ck5Id})';
            });

            $('#btnBack').click(function(e) {

                if ('@Model.DocumentStatus' == '@Enums.DocumentStatus.Completed.ToString()' || '@Model.DocumentStatus' == '@Enums.DocumentStatus.Cancelled.ToString()')
                    if ('@Model.Ck5Type' == '@Enums.CK5Type.MarketReturn.ToString()') {
                        location.href = '@Url.Action("CK5MarketReturnCompleted", "CK5")';
                    } else {
                        location.href = '@Url.Action("CK5Completed", "CK5")';
                    }
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.Domestic.ToString()')
                    location.href = '@Url.Action("Index", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.Intercompany.ToString()' || '@Model.Ck5Type' == '@Enums.CK5Type.DomesticAlcohol.ToString()')
                    location.href = '@Url.Action("Index", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.Export.ToString()')
                    location.href = '@Url.Action("CK5Export", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.PortToImporter.ToString()' || '@Model.Ck5Type' == '@Enums.CK5Type.ImporterToPlant.ToString()')
                    location.href = '@Url.Action("CK5Import", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.Manual.ToString()')
                    location.href = '@Url.Action("CK5Manual", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.MarketReturn.ToString()')
                    location.href = '@Url.Action("CK5MarketReturn", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.TriggerSto.ToString()')
                    location.href = '@Url.Action("CK5TriggerSto", "CK5")';
                else if ('@Model.Ck5Type' == '@Enums.CK5Type.Waste.ToString()')
                    location.href = '@Url.Action("CK5Waste", "CK5")';

            });

            $("#btnSaveGovStatus").click(function() {
                if ('@Model.Ck5Type' == '@Enums.CK5Type.MarketReturn.ToString()') {
                    if (ValidateGovMarketReturn()) {
                        $('#GovApproveForm').submit();
                        //alert('submit');
                    }
                } else {
                    if (ValidateGovInput()) {
                        $('#GovApproveForm').submit();
                    }
                }

            });

            $('#divComment').hide();

            $('#GovStatus').on('change', function(e) {
                var valueSelected = this.value;

                $('#divComment').hide();

                if (valueSelected == 'GovReject' || valueSelected == 'GovCancel') {
                    $('#divComment').show();

                }

            });
            $("#btnSaveWaste").click(function() {
                $('#GovApproveForm').submit();
            });
        

            $("#btnGiCreated").click(function () {

                if ('@Model.AllowGiCreated' == "True") {

                    if (ValidateGiCreated()) {
                        $('#GovApproveForm').submit();
                    }
                } else if ('@Model.AllowGrCreated' == "True"
                    || '@Model.AllowTfPostedPortToImporter' == "True") {

                    if (ValidateGRCreated()) {
                        $('#GovApproveForm').submit();
                    }
                }
                else if ('@Model.AllowGoodIssue' == "True") {

                    if (ValidateGoodIssue()) {
                        $('#GovApproveForm').submit();
                    }
                }
                else if ('@Model.AllowGoodReceive' == "True") {

                    if (ValidateGoodReceive()) {
                        $('#GovApproveForm').submit();
                    }
                }
                else if ('@Model.AllowPurchaseOrder' == "True") {
                    if (ValidatePOReceive()) {
                        $('#GovApproveForm').submit();
                    }
                }

            });

            if ('@Model.AllowGiCreated' == "True" || '@Model.AllowGrCreated' == "True"
            || '@Model.AllowGoodIssue' == "True" || '@Model.AllowGoodReceive' == "True"
            || '@Model.AllowWasteDisposal' == "True") {
                $('#collapseFour').removeClass('collapse');
                $('#collapseFour').addClass('in');
                $("#collapseFour").css({ height: "auto" });

                $('#collapseThree').removeClass('in');
                $("#collapseThree").css({ height: "0" });

                $('#collapseTwo').removeClass('in');
                $("#collapseTwo").css({ height: "0" });

                $('#collapseOne').removeClass('in');
                $("#collapseOne").css({ height: "0" });
            }
        });

        function openGovStatusBlock() {
            var docStatus = '@Model.IsWaitingGovApproval';
            var isAllow = '@Model.AllowGovApproveAndReject';
            if (docStatus.toLowerCase() == 'true' && isAllow.toLowerCase() == 'true') {
                $('#home').addClass('active');
                $('#home-tab').addClass('active');
                $('#collapseFour').addClass("in");

                $('#RegistrationNumber').bind('input propertychange', function () {
                    AddValidationClass(false, 'RegistrationNumber');
                    if (this.value.length) {
                        AddValidationClass(true, 'RegistrationNumber');
                    }
                });

                $('#RegistrationDate').bind('input change', function () {
                    AddValidationClass(false, 'RegistrationDate');
                    if (this.value.length) {
                        AddValidationClass(true, 'RegistrationDate');
                    }
                });
            }
        }

        $("#btnApprove").click(function () {

            $('#btnConfirm').show();
            $('#btnConfirmGovApprove').hide();
            $("#lblTitleModal").text('Approval');
            $("#lblMessageModal").text('Approve Documents ?');
            $('#Ck5Modal').modal('show');

        });


        $("#btnConfirm").click(function () {

            window.location = "@Url.Action("ApproveDocument", "CK5", new {id = @Model.Ck5Id})";
        });

        $("#btnReject").click(function () {
            $('#btnConfirmReject').attr('disabled', 'disabled');

            $('#Comment').val('');

            $('#Ck5ModalReject').modal('show');

        });
    
    $("#btnDisposalReject").click(function () {
        $('#btnConfirmDisposalReject').attr('disabled', 'disabled');

        $('#CommentDisposalReject').val('');

        $('#Ck5ModalDisposalReject').modal('show');

    });

        $('#Comment').bind('input propertychange', function () {

            $('#btnConfirmReject').attr('disabled', 'disabled');
            if (this.value.length) {
                $('#btnConfirmReject').removeAttr('disabled');
        }
    });

    $('#CommentDisposalReject').bind('input propertychange', function () {
        $('#btnConfirmDisposalReject').attr('disabled', 'disabled');
        if (this.value.length) {
            $('#btnConfirmDisposalReject').removeAttr('disabled');
            }
        });
    
        function printPreview(url) {

            window.open(url, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');

        }
        
        function openAttachment(url) {
            window.open(url, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes');
        }

        function PrintOutClick(reportUrl, addHistoryUrl, id) {

            window.open(reportUrl, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');

            $.ajax({
                type: 'POST',
                url: addHistoryUrl,
                data: { id: id },
                success: function (response) {
                    $('#PrintOutHistoryTable').html("");
                    $('#PrintOutHistoryTable').html(response);
                    ResetPrintHistoryDataTable();
                }
            });
        }

        function ResetPrintHistoryDataTable() {
            // DataTable
            var table = null;
            if ($.fn.dataTable.isDataTable('#printHistoryTable')) {
                table = $('#printHistoryTable').DataTable();
                table.destroy();
            }

            table = $('#printHistoryTable').DataTable(
                {
                    "sDom": "Rlfrtip",
                    "language": {
                        "zeroRecords": "No records found",
                        "infoFiltered": "(filtered from _MAX_ total records)"
                    }
                });


        }

        $("#btnCancelSAP").click(function () {


            $('#Ck5ModalCancelSap').modal('show');

        });

        $("#btnConfirmCancel").click(function () {

            window.location = "@Url.Action("CancelSAPDocument", "CK5", new {id = @Model.Ck5Id})";
        });

        $("#btnSaveAttachment").click(function () {
            $('#ck5ModalSaveAttachmentConfirm').modal('show');

            //$('#GovApproveForm').submit();

        });

        $("#btnConfirmSaveAttachment").click(function () {
            $('#GovApproveForm').submit();
        });
        
        $("#btnAllowAttachment").click(function () {
            $('#GovApproveForm').submit();
        });
    </script>
}
