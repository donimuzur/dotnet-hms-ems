@using Sampoerna.EMS.Core
@using Sampoerna.EMS.Website.Helpers
@model Sampoerna.EMS.Website.Models.LACK10.Lack10IndexViewModel
@{
    ViewBag.Title = "Details";
}

@using (Html.BeginForm(Model.ActionType, "LACK10", FormMethod.Post, new { @id = "DetailForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container-wrap title-page">
        <div class="row">
            <div class="col-sm-12">
                <h3>LACK-10 Form</h3>
                <label class="status">@Model.Details.StatusName</label>
                <div class="action-button">
                    @if (Model.AllowApproveAndReject)
                    {
                        <input type="button" class="btn btn-blue" value="Approve" id="btnApprove" />

                        <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                    }
                    else
                    {
                        if (Model.AllowManagerReject)
                        {
                            <input type="button" class="btn btn-danger" value="Reject" id="btnReject" />
                        }
                    }

                    @if (Model.Details.Status == Enums.DocumentStatus.Completed && Model.AllowEditCompleted)
                    {
                        <input type="button" class="btn btn-blue" value="Save" id="btnSaveGovStatus" />
                    }

                    <input type="button" class="btn btn-grey" value="Print Preview" id="btnPrintPreview" />

                    @if (Model.Details.Status == Enums.DocumentStatus.Completed)
                    {
                        <input type="button" value="Back" class="btn btn-grey" id="btnCancelCompleted" />
                    }
                    else
                    {
                        <input type="button" value="Back" class="btn btn-grey" id="btnCancel" />
                    }

                </div>
            </div>
        </div>
    </div>

    <div class="container-wrap">
        <div class="row">
            <div class="col-sm-12">
                <div role="tabpanel">

                    <!-- Nav tabs -->
                    <ul role="tablist" class="nav nav-tabs">
                        <li class="active" role="presentation"><a data-toggle="tab" role="tab" aria-controls="information" href="#information">Information</a></li>
                        <li role="presentation"><a href="#profile" aria-controls="profile" role="tab" data-toggle="tab">Print Out</a></li>
                        <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Changes Log</a></li>
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content">
                        @if (Model.Details.Status == Enums.DocumentStatus.Completed && Model.AllowEditCompleted)
                        {
                            @Html.Partial("_HomeCompleted")
                        }
                        else
                        {
                            @Html.Partial("_HomeDetails")
                        }

                        @Html.Partial("_PrintOut")
                        @Html.Partial("_ChangeLog")
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="Lack10Modal" class="modal main-menu-child fade active-modal poa" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    <h3><span id="lblTitleModal">Approval</span> </h3>
                </div>
                <div class="modal-body">
                    <span id="lblMessageModal">Approve Documents ?</span>
                </div>
                <div class="modal-footer">
                    <input type="button" id="btnConfirm" class="btn btn-blue" value="Yes" />
                    <input type="button" id="btnConfirmGovApprove" class="btn btn-blue" value="Yes" />
                    <input type="button" id="btnConfirmGovPartApprove" class="btn btn-blue" value="Yes" />
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="No" />
                </div>
            </div>
        </div>
    </div>

}

<div id="Lack10ModalReject" class="modal fade in reject-doc ems-modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Reject document</h4>
            </div>
            @using (Html.BeginForm("RejectDocument", "LACK10"))
            {
                <div class="modal-body">
                    @Html.HiddenFor(model => model.Details.Lack10Id)
                    <div class="form-excise" role="form">
                        <div class="row">
                            <label class="col-md-3">Add Comment<span class="red">*</span></label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Details.Comment, new { @rows = "5", @class = "col-md-9" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                    <input type="submit" class="btn btn-danger" value="Reject" id="btnConfirmReject" />
                </div>
            }
        </div>
    </div>
</div>

<div id="ModalLack10Doc" class="modal ems-modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Error</h4>
            </div>
            <div class="modal-body">
                <p>
                    <span id="modalBodyMessage">Decree Doc is required.</span>
                </p>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Ok" />
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/Scripts/lack10script.js"></script>
    @if (Model.Details.Status == Enums.DocumentStatus.Completed && Model.AllowEditCompleted)
    {
        <script src="~/Scripts/lack10/doccompleted.js"></script>
    }
    <script type="text/javascript" language="javascript" class="init">
    $(document).ready(function () {
        SetBasedOn();

        SetPoaList();

        SetStatusGov();

        $('#divComment').hide();

        $('#Details_StatusGoverment').on('change', function (e) {
            var valueSelected = this.value;

            $('#divComment').hide();

            if (valueSelected == 'Rejected') {
                $('#divComment').show();
                $('#Details_GovApprovalActionType').val('@Enums.ActionType.GovReject');
            }
            else if (valueSelected == 'Approved') {
                $('#Details_GovApprovalActionType').val('@Enums.ActionType.GovApprove');
            }
            else if (valueSelected == '') {
                $('#Details_GovApprovalActionType').val('@Enums.ActionType.Completed');
            }
        });

        $('#btnCancel').click(function (e) {
            location.href = '@Url.Action("Index", "LACK10")';
        });

        $('#btnCancelCompleted').click(function (e) {
            location.href = '@Url.Action("CompletedDocument", "LACK10")';
        });

        $("#btnApprove").click(function () {
            $('#btnConfirm').show();
            $('#btnConfirmGovApprove').hide();
            $('#btnConfirmGovPartApprove').hide();
            $("#lblTitleModal").text('Approval');
            $("#lblMessageModal").text('Approve Documents ?');
            $('#Lack10Modal').modal('show');
        });

        $("#btnReject").click(function () {
            $('#Detail_Comment').val('');
            $('#Lack10ModalReject').modal('show');
        });

        $("#btnConfirm").click(function () {
            //window.location = "@Url.Action("ApproveDocument", "LACK10", new { id = @Model.Details.Lack10Id, SubmissionDate = @Model.Details.SubmissionDate })";
            $('#DetailForm').submit();
        });

        $("#btnSaveGovStatus").click(function () {
            if (ValidateCompletedInput()) {
                $('#DetailForm').submit();
            }
        });

        $('#btnExportLack10Item').click(function (e) {
            location.href = '@Url.Action("ExportXlsLack10Item", "LACK10", new { id = @Model.Details.Lack10Id })';
        });

        $('#btnPrintPreview').click(function (e) {
            printPreview('@Url.EncryptedAction("PrintPreview", "LACK10", new { id = @Model.Details.Lack10Id })');
        });

        $('#btn-changelog-export-xls').click(function () {
            location.href = '@Url.Action("ExportClientsListToExcel", "LACK10", new { id = Model.Details.Lack10Id })';
        });
    });

    function SetStatusGov() {
        var statusGov = '@Model.Details.StatusGoverment';
        if (statusGov == 'Rejected') {
            $('#Details_GovApprovalActionType').val('@Enums.ActionType.GovReject');
        }
        else if (statusGov == 'Approved') {
            $('#Details_GovApprovalActionType').val('@Enums.ActionType.GovApprove');
        }
    }

    function SetPoaList() {
        var poa = '@Model.Details.ApprovedByPoa';
        var nppbkc = '@Model.Details.NppbkcId';
        var plant = '@Model.Details.PlantId';
        var url = '@Url.Action("PoaListPartial", "LACK10")';
        var urlPlant = '@Url.Action("GetPoaByPlantId", "LACK10")';

        if (poa == '') {
            if (plant != '') {
                ajaxSelectNppbck({ plantId: plant }, urlPlant);
            }
            else {
                ajaxSelectNppbck({ nppbkcid: nppbkc }, url);
            }
        }
    }

    function SetBasedOn() {
        var nppbkc = '@Model.Details.NppbkcId';
        var plantId = '@Model.Details.PlantId';
        var plantName = '@Model.Details.PlantName';

        if (plantId == '') {
            $('#basedNppbkc').prop('checked', true);
        }

        if (plantId != '') {
            $('#Details_PlantName').val(plantId + '-' + plantName);
        }
    }

    function printPreview(url) {
        window.open(url, '_blank', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');
    }

    function openAttachment(url) {
        window.open(url, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes');
    }

    function PrintOutClick(reportUrl, addHistoryUrl, id) {

        window.open(reportUrl, 'popup', 'width=800,height=600,toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no');

        $.ajax({
            type: 'POST',
            url: addHistoryUrl,
            data: { id: id },
            success: function (response) {
                $('#PrintOutHistoryTable').html("");
                $('#PrintOutHistoryTable').html(response);
                ResetPrintHistoryDataTable();
            }
        });
    }

    function ResetPrintHistoryDataTable() {
        // DataTable
        var table = null;
        if ($.fn.dataTable.isDataTable('#printHistoryTable')) {
            table = $('#printHistoryTable').DataTable();
            table.destroy();
        }

        table = $('#printHistoryTable').DataTable(
            {
                "sDom": "Rlfrtip",
                "language": {
                    "zeroRecords": "No records found",
                    "infoFiltered": "(filtered from _MAX_ total records)"
                }
            });
    }

</script>
}

